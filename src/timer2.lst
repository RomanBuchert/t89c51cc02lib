                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Feb  3 2010) (UNIX)
                              4 ; This file was generated Sun Feb 20 14:49:26 2011
                              5 ;--------------------------------------------------------
                              6 	.module timer2
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _CCF0
                             13 	.globl _CCF1
                             14 	.globl _CCF2
                             15 	.globl _CCF3
                             16 	.globl _CCF4
                             17 	.globl _CR
                             18 	.globl _CF
                             19 	.globl _ECAN
                             20 	.globl _EADC
                             21 	.globl _ETIM
                             22 	.globl _EX0
                             23 	.globl _ET0
                             24 	.globl _EX1
                             25 	.globl _ET1
                             26 	.globl _ES
                             27 	.globl _ET2
                             28 	.globl _EC
                             29 	.globl _EA
                             30 	.globl _RI
                             31 	.globl _TI
                             32 	.globl _RB8
                             33 	.globl _TB8
                             34 	.globl _REN
                             35 	.globl _SM2
                             36 	.globl _SM1
                             37 	.globl _FE
                             38 	.globl _SM0
                             39 	.globl _CP_RL2
                             40 	.globl _C_T2
                             41 	.globl _TR2
                             42 	.globl _EXEN2
                             43 	.globl _TCLK
                             44 	.globl _RCLK
                             45 	.globl _EXF2
                             46 	.globl _TF2
                             47 	.globl _IT0
                             48 	.globl _IE0
                             49 	.globl _IT1
                             50 	.globl _IE1
                             51 	.globl _TR0
                             52 	.globl _TF0
                             53 	.globl _TR1
                             54 	.globl _TF1
                             55 	.globl _P
                             56 	.globl _UD
                             57 	.globl _OV
                             58 	.globl _RS0
                             59 	.globl _RS1
                             60 	.globl _F0
                             61 	.globl _AC
                             62 	.globl _CY
                             63 	.globl _P4_0
                             64 	.globl _P4_1
                             65 	.globl _RXD
                             66 	.globl _TXD
                             67 	.globl _INT0
                             68 	.globl _INT1
                             69 	.globl _T0
                             70 	.globl _T1
                             71 	.globl _WR
                             72 	.globl _RD
                             73 	.globl _P3_0
                             74 	.globl _P3_1
                             75 	.globl _P3_2
                             76 	.globl _P3_3
                             77 	.globl _P3_4
                             78 	.globl _P3_5
                             79 	.globl _P3_6
                             80 	.globl _P3_7
                             81 	.globl _P2_0
                             82 	.globl _P2_1
                             83 	.globl _P1_0
                             84 	.globl _P1_1
                             85 	.globl _P1_2
                             86 	.globl _P1_3
                             87 	.globl _P1_4
                             88 	.globl _P1_5
                             89 	.globl _P1_6
                             90 	.globl _P1_7
                             91 	.globl _CANEN
                             92 	.globl _CANIDM4
                             93 	.globl _CANIDM3
                             94 	.globl _CANIDM2
                             95 	.globl _CANIDM1
                             96 	.globl _CANIE
                             97 	.globl _CANGIE
                             98 	.globl _CANIDT4
                             99 	.globl _CANIDT3
                            100 	.globl _CANIDT2
                            101 	.globl _CANIDT1
                            102 	.globl _CANSIT
                            103 	.globl _CANBT3
                            104 	.globl _CANBT2
                            105 	.globl _CANBT1
                            106 	.globl _CANCONCH
                            107 	.globl _CANSTCH
                            108 	.globl _CANPAGE
                            109 	.globl _CANSTMPH
                            110 	.globl _CANSTMPL
                            111 	.globl _CANTIMH
                            112 	.globl _CANTIML
                            113 	.globl _CANGCON
                            114 	.globl _CANGSTA
                            115 	.globl _CANTTCH
                            116 	.globl _CANTTCL
                            117 	.globl _CANMSG
                            118 	.globl _CANTCON
                            119 	.globl _CANREC
                            120 	.globl _CANTEC
                            121 	.globl _CANGIT
                            122 	.globl _CCAPM4
                            123 	.globl _CCAP4L
                            124 	.globl _CCAP4H
                            125 	.globl _CCAPM3
                            126 	.globl _CCAP3L
                            127 	.globl _CCAP3H
                            128 	.globl _CCAPM2
                            129 	.globl _CCAP2L
                            130 	.globl _CCAP2H
                            131 	.globl _CCAPM1
                            132 	.globl _CCAP1L
                            133 	.globl _CCAP1H
                            134 	.globl _CCAPM0
                            135 	.globl _CCAP0L
                            136 	.globl _CCAP0H
                            137 	.globl _CL
                            138 	.globl _CH
                            139 	.globl _CMOD
                            140 	.globl _CCON
                            141 	.globl _IEN1
                            142 	.globl _IPH0
                            143 	.globl _IPL0
                            144 	.globl _IEN0
                            145 	.globl _IPH1
                            146 	.globl _IPL1
                            147 	.globl _AUXR1
                            148 	.globl _AUXR
                            149 	.globl _EECON
                            150 	.globl _FCON
                            151 	.globl _ADCF
                            152 	.globl _ADDH
                            153 	.globl _ADDL
                            154 	.globl _ADCON
                            155 	.globl _ADCLK
                            156 	.globl _SADDR
                            157 	.globl _SADEN
                            158 	.globl _SBUF
                            159 	.globl _SCON
                            160 	.globl _WDTPRG
                            161 	.globl _WDTRST
                            162 	.globl _RCAP2H
                            163 	.globl _RCAP2L
                            164 	.globl _TH2
                            165 	.globl _TH1
                            166 	.globl _TH0
                            167 	.globl _TL2
                            168 	.globl _TL1
                            169 	.globl _TL0
                            170 	.globl _T2MOD
                            171 	.globl _T2CON
                            172 	.globl _TMOD
                            173 	.globl _TCON
                            174 	.globl _CKCON
                            175 	.globl _PCON
                            176 	.globl _DPH
                            177 	.globl _DPL
                            178 	.globl _SP
                            179 	.globl _B
                            180 	.globl _ACC
                            181 	.globl _PSW
                            182 	.globl _P4
                            183 	.globl _P3
                            184 	.globl _P2
                            185 	.globl _P1
                            186 	.globl _u8Cntr
                            187 	.globl _u16Turns
                            188 	.globl _Tmr2Init
                            189 	.globl _Tmr2IsrFnc
                            190 ;--------------------------------------------------------
                            191 ; special function registers
                            192 ;--------------------------------------------------------
                            193 	.area RSEG    (DATA)
                    0090    194 G$P1$0$0 == 0x0090
                    0090    195 _P1	=	0x0090
                    00A0    196 G$P2$0$0 == 0x00a0
                    00A0    197 _P2	=	0x00a0
                    00B0    198 G$P3$0$0 == 0x00b0
                    00B0    199 _P3	=	0x00b0
                    00C0    200 G$P4$0$0 == 0x00c0
                    00C0    201 _P4	=	0x00c0
                    00D0    202 G$PSW$0$0 == 0x00d0
                    00D0    203 _PSW	=	0x00d0
                    00E0    204 G$ACC$0$0 == 0x00e0
                    00E0    205 _ACC	=	0x00e0
                    00F0    206 G$B$0$0 == 0x00f0
                    00F0    207 _B	=	0x00f0
                    0081    208 G$SP$0$0 == 0x0081
                    0081    209 _SP	=	0x0081
                    0082    210 G$DPL$0$0 == 0x0082
                    0082    211 _DPL	=	0x0082
                    0083    212 G$DPH$0$0 == 0x0083
                    0083    213 _DPH	=	0x0083
                    0087    214 G$PCON$0$0 == 0x0087
                    0087    215 _PCON	=	0x0087
                    008F    216 G$CKCON$0$0 == 0x008f
                    008F    217 _CKCON	=	0x008f
                    0088    218 G$TCON$0$0 == 0x0088
                    0088    219 _TCON	=	0x0088
                    0089    220 G$TMOD$0$0 == 0x0089
                    0089    221 _TMOD	=	0x0089
                    00C8    222 G$T2CON$0$0 == 0x00c8
                    00C8    223 _T2CON	=	0x00c8
                    00C9    224 G$T2MOD$0$0 == 0x00c9
                    00C9    225 _T2MOD	=	0x00c9
                    008A    226 G$TL0$0$0 == 0x008a
                    008A    227 _TL0	=	0x008a
                    008B    228 G$TL1$0$0 == 0x008b
                    008B    229 _TL1	=	0x008b
                    00CC    230 G$TL2$0$0 == 0x00cc
                    00CC    231 _TL2	=	0x00cc
                    008C    232 G$TH0$0$0 == 0x008c
                    008C    233 _TH0	=	0x008c
                    008D    234 G$TH1$0$0 == 0x008d
                    008D    235 _TH1	=	0x008d
                    00CD    236 G$TH2$0$0 == 0x00cd
                    00CD    237 _TH2	=	0x00cd
                    00CA    238 G$RCAP2L$0$0 == 0x00ca
                    00CA    239 _RCAP2L	=	0x00ca
                    00CB    240 G$RCAP2H$0$0 == 0x00cb
                    00CB    241 _RCAP2H	=	0x00cb
                    00A6    242 G$WDTRST$0$0 == 0x00a6
                    00A6    243 _WDTRST	=	0x00a6
                    00A7    244 G$WDTPRG$0$0 == 0x00a7
                    00A7    245 _WDTPRG	=	0x00a7
                    0098    246 G$SCON$0$0 == 0x0098
                    0098    247 _SCON	=	0x0098
                    0099    248 G$SBUF$0$0 == 0x0099
                    0099    249 _SBUF	=	0x0099
                    00B9    250 G$SADEN$0$0 == 0x00b9
                    00B9    251 _SADEN	=	0x00b9
                    00A9    252 G$SADDR$0$0 == 0x00a9
                    00A9    253 _SADDR	=	0x00a9
                    00F2    254 G$ADCLK$0$0 == 0x00f2
                    00F2    255 _ADCLK	=	0x00f2
                    00F3    256 G$ADCON$0$0 == 0x00f3
                    00F3    257 _ADCON	=	0x00f3
                    00F4    258 G$ADDL$0$0 == 0x00f4
                    00F4    259 _ADDL	=	0x00f4
                    00F5    260 G$ADDH$0$0 == 0x00f5
                    00F5    261 _ADDH	=	0x00f5
                    00F6    262 G$ADCF$0$0 == 0x00f6
                    00F6    263 _ADCF	=	0x00f6
                    00D1    264 G$FCON$0$0 == 0x00d1
                    00D1    265 _FCON	=	0x00d1
                    00D2    266 G$EECON$0$0 == 0x00d2
                    00D2    267 _EECON	=	0x00d2
                    008E    268 G$AUXR$0$0 == 0x008e
                    008E    269 _AUXR	=	0x008e
                    00A2    270 G$AUXR1$0$0 == 0x00a2
                    00A2    271 _AUXR1	=	0x00a2
                    00F8    272 G$IPL1$0$0 == 0x00f8
                    00F8    273 _IPL1	=	0x00f8
                    00F7    274 G$IPH1$0$0 == 0x00f7
                    00F7    275 _IPH1	=	0x00f7
                    00A8    276 G$IEN0$0$0 == 0x00a8
                    00A8    277 _IEN0	=	0x00a8
                    00B8    278 G$IPL0$0$0 == 0x00b8
                    00B8    279 _IPL0	=	0x00b8
                    00B7    280 G$IPH0$0$0 == 0x00b7
                    00B7    281 _IPH0	=	0x00b7
                    00E8    282 G$IEN1$0$0 == 0x00e8
                    00E8    283 _IEN1	=	0x00e8
                    00D8    284 G$CCON$0$0 == 0x00d8
                    00D8    285 _CCON	=	0x00d8
                    00D9    286 G$CMOD$0$0 == 0x00d9
                    00D9    287 _CMOD	=	0x00d9
                    00F9    288 G$CH$0$0 == 0x00f9
                    00F9    289 _CH	=	0x00f9
                    00E9    290 G$CL$0$0 == 0x00e9
                    00E9    291 _CL	=	0x00e9
                    00FA    292 G$CCAP0H$0$0 == 0x00fa
                    00FA    293 _CCAP0H	=	0x00fa
                    00EA    294 G$CCAP0L$0$0 == 0x00ea
                    00EA    295 _CCAP0L	=	0x00ea
                    00DA    296 G$CCAPM0$0$0 == 0x00da
                    00DA    297 _CCAPM0	=	0x00da
                    00FB    298 G$CCAP1H$0$0 == 0x00fb
                    00FB    299 _CCAP1H	=	0x00fb
                    00EB    300 G$CCAP1L$0$0 == 0x00eb
                    00EB    301 _CCAP1L	=	0x00eb
                    00DB    302 G$CCAPM1$0$0 == 0x00db
                    00DB    303 _CCAPM1	=	0x00db
                    00FC    304 G$CCAP2H$0$0 == 0x00fc
                    00FC    305 _CCAP2H	=	0x00fc
                    00EC    306 G$CCAP2L$0$0 == 0x00ec
                    00EC    307 _CCAP2L	=	0x00ec
                    00DC    308 G$CCAPM2$0$0 == 0x00dc
                    00DC    309 _CCAPM2	=	0x00dc
                    00FD    310 G$CCAP3H$0$0 == 0x00fd
                    00FD    311 _CCAP3H	=	0x00fd
                    00ED    312 G$CCAP3L$0$0 == 0x00ed
                    00ED    313 _CCAP3L	=	0x00ed
                    00DD    314 G$CCAPM3$0$0 == 0x00dd
                    00DD    315 _CCAPM3	=	0x00dd
                    00FE    316 G$CCAP4H$0$0 == 0x00fe
                    00FE    317 _CCAP4H	=	0x00fe
                    00EE    318 G$CCAP4L$0$0 == 0x00ee
                    00EE    319 _CCAP4L	=	0x00ee
                    00DE    320 G$CCAPM4$0$0 == 0x00de
                    00DE    321 _CCAPM4	=	0x00de
                    009B    322 G$CANGIT$0$0 == 0x009b
                    009B    323 _CANGIT	=	0x009b
                    009C    324 G$CANTEC$0$0 == 0x009c
                    009C    325 _CANTEC	=	0x009c
                    009D    326 G$CANREC$0$0 == 0x009d
                    009D    327 _CANREC	=	0x009d
                    00A1    328 G$CANTCON$0$0 == 0x00a1
                    00A1    329 _CANTCON	=	0x00a1
                    00A3    330 G$CANMSG$0$0 == 0x00a3
                    00A3    331 _CANMSG	=	0x00a3
                    00A4    332 G$CANTTCL$0$0 == 0x00a4
                    00A4    333 _CANTTCL	=	0x00a4
                    00A5    334 G$CANTTCH$0$0 == 0x00a5
                    00A5    335 _CANTTCH	=	0x00a5
                    00AA    336 G$CANGSTA$0$0 == 0x00aa
                    00AA    337 _CANGSTA	=	0x00aa
                    00AB    338 G$CANGCON$0$0 == 0x00ab
                    00AB    339 _CANGCON	=	0x00ab
                    00AC    340 G$CANTIML$0$0 == 0x00ac
                    00AC    341 _CANTIML	=	0x00ac
                    00AD    342 G$CANTIMH$0$0 == 0x00ad
                    00AD    343 _CANTIMH	=	0x00ad
                    00AE    344 G$CANSTMPL$0$0 == 0x00ae
                    00AE    345 _CANSTMPL	=	0x00ae
                    00AF    346 G$CANSTMPH$0$0 == 0x00af
                    00AF    347 _CANSTMPH	=	0x00af
                    00B1    348 G$CANPAGE$0$0 == 0x00b1
                    00B1    349 _CANPAGE	=	0x00b1
                    00B2    350 G$CANSTCH$0$0 == 0x00b2
                    00B2    351 _CANSTCH	=	0x00b2
                    00B3    352 G$CANCONCH$0$0 == 0x00b3
                    00B3    353 _CANCONCH	=	0x00b3
                    00B4    354 G$CANBT1$0$0 == 0x00b4
                    00B4    355 _CANBT1	=	0x00b4
                    00B5    356 G$CANBT2$0$0 == 0x00b5
                    00B5    357 _CANBT2	=	0x00b5
                    00B6    358 G$CANBT3$0$0 == 0x00b6
                    00B6    359 _CANBT3	=	0x00b6
                    00BB    360 G$CANSIT$0$0 == 0x00bb
                    00BB    361 _CANSIT	=	0x00bb
                    00BC    362 G$CANIDT1$0$0 == 0x00bc
                    00BC    363 _CANIDT1	=	0x00bc
                    00BD    364 G$CANIDT2$0$0 == 0x00bd
                    00BD    365 _CANIDT2	=	0x00bd
                    00BE    366 G$CANIDT3$0$0 == 0x00be
                    00BE    367 _CANIDT3	=	0x00be
                    00BF    368 G$CANIDT4$0$0 == 0x00bf
                    00BF    369 _CANIDT4	=	0x00bf
                    00C1    370 G$CANGIE$0$0 == 0x00c1
                    00C1    371 _CANGIE	=	0x00c1
                    00C3    372 G$CANIE$0$0 == 0x00c3
                    00C3    373 _CANIE	=	0x00c3
                    00C4    374 G$CANIDM1$0$0 == 0x00c4
                    00C4    375 _CANIDM1	=	0x00c4
                    00C5    376 G$CANIDM2$0$0 == 0x00c5
                    00C5    377 _CANIDM2	=	0x00c5
                    00C6    378 G$CANIDM3$0$0 == 0x00c6
                    00C6    379 _CANIDM3	=	0x00c6
                    00C7    380 G$CANIDM4$0$0 == 0x00c7
                    00C7    381 _CANIDM4	=	0x00c7
                    00CF    382 G$CANEN$0$0 == 0x00cf
                    00CF    383 _CANEN	=	0x00cf
                            384 ;--------------------------------------------------------
                            385 ; special function bits
                            386 ;--------------------------------------------------------
                            387 	.area RSEG    (DATA)
                    0097    388 G$P1_7$0$0 == 0x0097
                    0097    389 _P1_7	=	0x0097
                    0096    390 G$P1_6$0$0 == 0x0096
                    0096    391 _P1_6	=	0x0096
                    0095    392 G$P1_5$0$0 == 0x0095
                    0095    393 _P1_5	=	0x0095
                    0094    394 G$P1_4$0$0 == 0x0094
                    0094    395 _P1_4	=	0x0094
                    0093    396 G$P1_3$0$0 == 0x0093
                    0093    397 _P1_3	=	0x0093
                    0092    398 G$P1_2$0$0 == 0x0092
                    0092    399 _P1_2	=	0x0092
                    0091    400 G$P1_1$0$0 == 0x0091
                    0091    401 _P1_1	=	0x0091
                    0090    402 G$P1_0$0$0 == 0x0090
                    0090    403 _P1_0	=	0x0090
                    00A1    404 G$P2_1$0$0 == 0x00a1
                    00A1    405 _P2_1	=	0x00a1
                    00A0    406 G$P2_0$0$0 == 0x00a0
                    00A0    407 _P2_0	=	0x00a0
                    00B7    408 G$P3_7$0$0 == 0x00b7
                    00B7    409 _P3_7	=	0x00b7
                    00B6    410 G$P3_6$0$0 == 0x00b6
                    00B6    411 _P3_6	=	0x00b6
                    00B5    412 G$P3_5$0$0 == 0x00b5
                    00B5    413 _P3_5	=	0x00b5
                    00B4    414 G$P3_4$0$0 == 0x00b4
                    00B4    415 _P3_4	=	0x00b4
                    00B3    416 G$P3_3$0$0 == 0x00b3
                    00B3    417 _P3_3	=	0x00b3
                    00B2    418 G$P3_2$0$0 == 0x00b2
                    00B2    419 _P3_2	=	0x00b2
                    00B1    420 G$P3_1$0$0 == 0x00b1
                    00B1    421 _P3_1	=	0x00b1
                    00B0    422 G$P3_0$0$0 == 0x00b0
                    00B0    423 _P3_0	=	0x00b0
                    00B7    424 G$RD$0$0 == 0x00b7
                    00B7    425 _RD	=	0x00b7
                    00B6    426 G$WR$0$0 == 0x00b6
                    00B6    427 _WR	=	0x00b6
                    00B5    428 G$T1$0$0 == 0x00b5
                    00B5    429 _T1	=	0x00b5
                    00B4    430 G$T0$0$0 == 0x00b4
                    00B4    431 _T0	=	0x00b4
                    00B3    432 G$INT1$0$0 == 0x00b3
                    00B3    433 _INT1	=	0x00b3
                    00B2    434 G$INT0$0$0 == 0x00b2
                    00B2    435 _INT0	=	0x00b2
                    00B1    436 G$TXD$0$0 == 0x00b1
                    00B1    437 _TXD	=	0x00b1
                    00B0    438 G$RXD$0$0 == 0x00b0
                    00B0    439 _RXD	=	0x00b0
                    00C1    440 G$P4_1$0$0 == 0x00c1
                    00C1    441 _P4_1	=	0x00c1
                    00C0    442 G$P4_0$0$0 == 0x00c0
                    00C0    443 _P4_0	=	0x00c0
                    00D7    444 G$CY$0$0 == 0x00d7
                    00D7    445 _CY	=	0x00d7
                    00D6    446 G$AC$0$0 == 0x00d6
                    00D6    447 _AC	=	0x00d6
                    00D5    448 G$F0$0$0 == 0x00d5
                    00D5    449 _F0	=	0x00d5
                    00D4    450 G$RS1$0$0 == 0x00d4
                    00D4    451 _RS1	=	0x00d4
                    00D3    452 G$RS0$0$0 == 0x00d3
                    00D3    453 _RS0	=	0x00d3
                    00D2    454 G$OV$0$0 == 0x00d2
                    00D2    455 _OV	=	0x00d2
                    00D1    456 G$UD$0$0 == 0x00d1
                    00D1    457 _UD	=	0x00d1
                    00D0    458 G$P$0$0 == 0x00d0
                    00D0    459 _P	=	0x00d0
                    008F    460 G$TF1$0$0 == 0x008f
                    008F    461 _TF1	=	0x008f
                    008E    462 G$TR1$0$0 == 0x008e
                    008E    463 _TR1	=	0x008e
                    008D    464 G$TF0$0$0 == 0x008d
                    008D    465 _TF0	=	0x008d
                    008C    466 G$TR0$0$0 == 0x008c
                    008C    467 _TR0	=	0x008c
                    008B    468 G$IE1$0$0 == 0x008b
                    008B    469 _IE1	=	0x008b
                    008A    470 G$IT1$0$0 == 0x008a
                    008A    471 _IT1	=	0x008a
                    0089    472 G$IE0$0$0 == 0x0089
                    0089    473 _IE0	=	0x0089
                    0088    474 G$IT0$0$0 == 0x0088
                    0088    475 _IT0	=	0x0088
                    00CF    476 G$TF2$0$0 == 0x00cf
                    00CF    477 _TF2	=	0x00cf
                    00CE    478 G$EXF2$0$0 == 0x00ce
                    00CE    479 _EXF2	=	0x00ce
                    00CD    480 G$RCLK$0$0 == 0x00cd
                    00CD    481 _RCLK	=	0x00cd
                    00CC    482 G$TCLK$0$0 == 0x00cc
                    00CC    483 _TCLK	=	0x00cc
                    00CB    484 G$EXEN2$0$0 == 0x00cb
                    00CB    485 _EXEN2	=	0x00cb
                    00CA    486 G$TR2$0$0 == 0x00ca
                    00CA    487 _TR2	=	0x00ca
                    00C9    488 G$C_T2$0$0 == 0x00c9
                    00C9    489 _C_T2	=	0x00c9
                    00C8    490 G$CP_RL2$0$0 == 0x00c8
                    00C8    491 _CP_RL2	=	0x00c8
                    009F    492 G$SM0$0$0 == 0x009f
                    009F    493 _SM0	=	0x009f
                    009F    494 G$FE$0$0 == 0x009f
                    009F    495 _FE	=	0x009f
                    009E    496 G$SM1$0$0 == 0x009e
                    009E    497 _SM1	=	0x009e
                    009D    498 G$SM2$0$0 == 0x009d
                    009D    499 _SM2	=	0x009d
                    009C    500 G$REN$0$0 == 0x009c
                    009C    501 _REN	=	0x009c
                    009B    502 G$TB8$0$0 == 0x009b
                    009B    503 _TB8	=	0x009b
                    009A    504 G$RB8$0$0 == 0x009a
                    009A    505 _RB8	=	0x009a
                    0099    506 G$TI$0$0 == 0x0099
                    0099    507 _TI	=	0x0099
                    0098    508 G$RI$0$0 == 0x0098
                    0098    509 _RI	=	0x0098
                    00AF    510 G$EA$0$0 == 0x00af
                    00AF    511 _EA	=	0x00af
                    00AE    512 G$EC$0$0 == 0x00ae
                    00AE    513 _EC	=	0x00ae
                    00AD    514 G$ET2$0$0 == 0x00ad
                    00AD    515 _ET2	=	0x00ad
                    00AC    516 G$ES$0$0 == 0x00ac
                    00AC    517 _ES	=	0x00ac
                    00AB    518 G$ET1$0$0 == 0x00ab
                    00AB    519 _ET1	=	0x00ab
                    00AA    520 G$EX1$0$0 == 0x00aa
                    00AA    521 _EX1	=	0x00aa
                    00A9    522 G$ET0$0$0 == 0x00a9
                    00A9    523 _ET0	=	0x00a9
                    00A8    524 G$EX0$0$0 == 0x00a8
                    00A8    525 _EX0	=	0x00a8
                    00EA    526 G$ETIM$0$0 == 0x00ea
                    00EA    527 _ETIM	=	0x00ea
                    00E9    528 G$EADC$0$0 == 0x00e9
                    00E9    529 _EADC	=	0x00e9
                    00E8    530 G$ECAN$0$0 == 0x00e8
                    00E8    531 _ECAN	=	0x00e8
                    00DF    532 G$CF$0$0 == 0x00df
                    00DF    533 _CF	=	0x00df
                    00DE    534 G$CR$0$0 == 0x00de
                    00DE    535 _CR	=	0x00de
                    00DC    536 G$CCF4$0$0 == 0x00dc
                    00DC    537 _CCF4	=	0x00dc
                    00DB    538 G$CCF3$0$0 == 0x00db
                    00DB    539 _CCF3	=	0x00db
                    00DA    540 G$CCF2$0$0 == 0x00da
                    00DA    541 _CCF2	=	0x00da
                    00D9    542 G$CCF1$0$0 == 0x00d9
                    00D9    543 _CCF1	=	0x00d9
                    00D8    544 G$CCF0$0$0 == 0x00d8
                    00D8    545 _CCF0	=	0x00d8
                            546 ;--------------------------------------------------------
                            547 ; overlayable register banks
                            548 ;--------------------------------------------------------
                            549 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     550 	.ds 8
                            551 ;--------------------------------------------------------
                            552 ; internal ram data
                            553 ;--------------------------------------------------------
                            554 	.area DSEG    (DATA)
                    0000    555 G$u16Turns$0$0==.
   0000                     556 _u16Turns::
   0000                     557 	.ds 2
                    0002    558 G$u8Cntr$0$0==.
   0002                     559 _u8Cntr::
   0002                     560 	.ds 1
                            561 ;--------------------------------------------------------
                            562 ; overlayable items in internal ram 
                            563 ;--------------------------------------------------------
                            564 	.area OSEG    (OVR,DATA)
                            565 ;--------------------------------------------------------
                            566 ; indirectly addressable internal ram data
                            567 ;--------------------------------------------------------
                            568 	.area ISEG    (DATA)
                            569 ;--------------------------------------------------------
                            570 ; absolute internal ram data
                            571 ;--------------------------------------------------------
                            572 	.area IABS    (ABS,DATA)
                            573 	.area IABS    (ABS,DATA)
                            574 ;--------------------------------------------------------
                            575 ; bit data
                            576 ;--------------------------------------------------------
                            577 	.area BSEG    (BIT)
                            578 ;--------------------------------------------------------
                            579 ; paged external ram data
                            580 ;--------------------------------------------------------
                            581 	.area PSEG    (PAG,XDATA)
                            582 ;--------------------------------------------------------
                            583 ; external ram data
                            584 ;--------------------------------------------------------
                            585 	.area XSEG    (XDATA)
                            586 ;--------------------------------------------------------
                            587 ; absolute external ram data
                            588 ;--------------------------------------------------------
                            589 	.area XABS    (ABS,XDATA)
                            590 ;--------------------------------------------------------
                            591 ; external initialized ram data
                            592 ;--------------------------------------------------------
                            593 	.area XISEG   (XDATA)
                            594 	.area HOME    (CODE)
                            595 	.area GSINIT0 (CODE)
                            596 	.area GSINIT1 (CODE)
                            597 	.area GSINIT2 (CODE)
                            598 	.area GSINIT3 (CODE)
                            599 	.area GSINIT4 (CODE)
                            600 	.area GSINIT5 (CODE)
                            601 	.area GSINIT  (CODE)
                            602 	.area GSFINAL (CODE)
                            603 	.area CSEG    (CODE)
                            604 ;--------------------------------------------------------
                            605 ; global & static initialisations
                            606 ;--------------------------------------------------------
                            607 	.area HOME    (CODE)
                            608 	.area GSINIT  (CODE)
                            609 	.area GSFINAL (CODE)
                            610 	.area GSINIT  (CODE)
                    0000    611 	G$Tmr2IsrFnc$0$0 ==.
                    0000    612 	C$timer2.c$19$1$1 ==.
                            613 ;	timer2.c:19: __u8 __data u8Cntr=50;
   0000 75*02 32            614 	mov	_u8Cntr,#0x32
                            615 ;--------------------------------------------------------
                            616 ; Home
                            617 ;--------------------------------------------------------
                            618 	.area HOME    (CODE)
                            619 	.area HOME    (CODE)
                            620 ;--------------------------------------------------------
                            621 ; code
                            622 ;--------------------------------------------------------
                            623 	.area CSEG    (CODE)
                            624 ;------------------------------------------------------------
                            625 ;Allocation info for local variables in function 'Tmr2Init'
                            626 ;------------------------------------------------------------
                            627 ;u32TmrFreq                Allocated to registers r2 r3 r4 r5 
                            628 ;u16ReloadVal              Allocated to registers r2 r3 
                            629 ;------------------------------------------------------------
                    0000    630 	G$Tmr2Init$0$0 ==.
                    0000    631 	C$timer2.c$25$0$0 ==.
                            632 ;	timer2.c:25: void Tmr2Init(void)
                            633 ;	-----------------------------------------
                            634 ;	 function Tmr2Init
                            635 ;	-----------------------------------------
   0000                     636 _Tmr2Init:
                    0002    637 	ar2 = 0x02
                    0003    638 	ar3 = 0x03
                    0004    639 	ar4 = 0x04
                    0005    640 	ar5 = 0x05
                    0006    641 	ar6 = 0x06
                    0007    642 	ar7 = 0x07
                    0000    643 	ar0 = 0x00
                    0001    644 	ar1 = 0x01
                    0000    645 	C$timer2.c$31$1$1 ==.
                            646 ;	timer2.c:31: Tmr2IsrDis();
   0000 C2 AD               647 	clr	_ET2
                    0002    648 	C$timer2.c$34$1$1 ==.
                            649 ;	timer2.c:34: if ((!RCLK) && (!TCLK))
   0002 30 CD 03            650 	jnb	_RCLK,00115$
   0005 02s00r68            651 	ljmp	00107$
   0008                     652 00115$:
   0008 20 CC 5D            653 	jb	_TCLK,00107$
                    000B    654 	C$timer2.c$38$2$2 ==.
                            655 ;	timer2.c:38: if (CKCON & 0x01)
   000B E5 8F               656 	mov	a,_CKCON
   000D 30 E0 1B            657 	jnb	acc.0,00102$
                    0010    658 	C$timer2.c$40$3$3 ==.
                            659 ;	timer2.c:40: u32TmrFreq = SysGetQuarzFreq()  / 600;
   0010 12s00r00            660 	lcall	_SysGetQuarzFreq
   0013 75*00 58            661 	mov	__divulong_PARM_2,#0x58
   0016 75*01 02            662 	mov	(__divulong_PARM_2 + 1),#0x02
   0019 75*02 00            663 	mov	(__divulong_PARM_2 + 2),#0x00
   001C 75*03 00            664 	mov	(__divulong_PARM_2 + 3),#0x00
   001F 12s00r00            665 	lcall	__divulong
   0022 AA 82               666 	mov	r2,dpl
   0024 AB 83               667 	mov	r3,dph
   0026 AC F0               668 	mov	r4,b
   0028 FD                  669 	mov	r5,a
   0029 80 19               670 	sjmp	00103$
   002B                     671 00102$:
                    002B    672 	C$timer2.c$44$3$4 ==.
                            673 ;	timer2.c:44: u32TmrFreq = SysGetQuarzFreq()  / 1200;
   002B 12s00r00            674 	lcall	_SysGetQuarzFreq
   002E 75*00 B0            675 	mov	__divulong_PARM_2,#0xB0
   0031 75*01 04            676 	mov	(__divulong_PARM_2 + 1),#0x04
   0034 75*02 00            677 	mov	(__divulong_PARM_2 + 2),#0x00
   0037 75*03 00            678 	mov	(__divulong_PARM_2 + 3),#0x00
   003A 12s00r00            679 	lcall	__divulong
   003D AA 82               680 	mov	r2,dpl
   003F AB 83               681 	mov	r3,dph
   0041 AC F0               682 	mov	r4,b
   0043 FD                  683 	mov	r5,a
   0044                     684 00103$:
                    0044    685 	C$timer2.c$47$2$2 ==.
                            686 ;	timer2.c:47: if (u32TmrFreq > 0x0000FFFFL)
   0044 C3                  687 	clr	c
   0045 74 FF               688 	mov	a,#0xFF
   0047 9A                  689 	subb	a,r2
   0048 74 FF               690 	mov	a,#0xFF
   004A 9B                  691 	subb	a,r3
   004B E4                  692 	clr	a
   004C 9C                  693 	subb	a,r4
   004D E4                  694 	clr	a
   004E 9D                  695 	subb	a,r5
   004F 50 03               696 	jnc	00105$
                    0051    697 	C$timer2.c$49$3$5 ==.
                            698 ;	timer2.c:49: CKCON |= 0x08;
   0051 43 8F 08            699 	orl	_CKCON,#0x08
                    0054    700 	C$timer2.c$50$2$2 ==.
                            701 ;	timer2.c:50: u32TmrFreq >> 1;
   0054                     702 00105$:
                    0054    703 	C$timer2.c$52$2$2 ==.
                            704 ;	timer2.c:52: T2MOD = 0;
                    0054    705 	C$timer2.c$53$2$2 ==.
                            706 ;	timer2.c:53: u16Turns = 0;
   0054 E4                  707 	clr	a
   0055 F5 C9               708 	mov	_T2MOD,a
   0057 F5*00               709 	mov	_u16Turns,a
   0059 F5*01               710 	mov	(_u16Turns + 1),a
                    005B    711 	C$timer2.c$54$2$2 ==.
                            712 ;	timer2.c:54: u16ReloadVal = u32TmrFreq;
                    005B    713 	C$timer2.c$55$2$2 ==.
                            714 ;	timer2.c:55: RCAP2L = (__u8) (u16ReloadVal & 0x00FF);
   005B 8A 04               715 	mov	ar4,r2
   005D 7D 00               716 	mov	r5,#0x00
   005F 8C CA               717 	mov	_RCAP2L,r4
                    0061    718 	C$timer2.c$56$2$2 ==.
                            719 ;	timer2.c:56: RCAP2H = (__u8) (u16ReloadVal >> 8);
   0061 8B CB               720 	mov	_RCAP2H,r3
                    0063    721 	C$timer2.c$57$2$2 ==.
                            722 ;	timer2.c:57: T2CON = 0x04;
   0063 75 C8 04            723 	mov	_T2CON,#0x04
                    0066    724 	C$timer2.c$58$2$2 ==.
                            725 ;	timer2.c:58: TR2 = 1;
   0066 D2 CA               726 	setb	_TR2
   0068                     727 00107$:
                    0068    728 	C$timer2.c$62$1$1 ==.
                            729 ;	timer2.c:62: isrFncTmr2 = Tmr2IsrFnc;
   0068 75*00r71            730 	mov	_isrFncTmr2,#_Tmr2IsrFnc
   006B 75*01s00            731 	mov	(_isrFncTmr2 + 1),#(_Tmr2IsrFnc >> 8)
                    006E    732 	C$timer2.c$65$1$1 ==.
                            733 ;	timer2.c:65: Tmr2IsrEna();
   006E D2 AD               734 	setb	_ET2
                    0070    735 	C$timer2.c$66$1$1 ==.
                    0070    736 	XG$Tmr2Init$0$0 ==.
   0070 22                  737 	ret
                            738 ;------------------------------------------------------------
                            739 ;Allocation info for local variables in function 'Tmr2IsrFnc'
                            740 ;------------------------------------------------------------
                            741 ;------------------------------------------------------------
                    0071    742 	G$Tmr2IsrFnc$0$0 ==.
                    0071    743 	C$timer2.c$72$1$1 ==.
                            744 ;	timer2.c:72: void Tmr2IsrFnc (void)
                            745 ;	-----------------------------------------
                            746 ;	 function Tmr2IsrFnc
                            747 ;	-----------------------------------------
   0071                     748 _Tmr2IsrFnc:
                    0071    749 	C$timer2.c$75$1$1 ==.
                            750 ;	timer2.c:75: }
                    0071    751 	C$timer2.c$75$1$1 ==.
                    0071    752 	XG$Tmr2IsrFnc$0$0 ==.
   0071 22                  753 	ret
                            754 	.area CSEG    (CODE)
                            755 	.area CONST   (CODE)
                            756 	.area XINIT   (CODE)
                            757 	.area CABS    (ABS,CODE)
