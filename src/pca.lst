                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Feb  3 2010) (UNIX)
                              4 ; This file was generated Sun Feb 20 14:49:26 2011
                              5 ;--------------------------------------------------------
                              6 	.module pca
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _PcaInitModul_PARM_2
                             13 	.globl _CCF0
                             14 	.globl _CCF1
                             15 	.globl _CCF2
                             16 	.globl _CCF3
                             17 	.globl _CCF4
                             18 	.globl _CR
                             19 	.globl _CF
                             20 	.globl _ECAN
                             21 	.globl _EADC
                             22 	.globl _ETIM
                             23 	.globl _EX0
                             24 	.globl _ET0
                             25 	.globl _EX1
                             26 	.globl _ET1
                             27 	.globl _ES
                             28 	.globl _ET2
                             29 	.globl _EC
                             30 	.globl _EA
                             31 	.globl _RI
                             32 	.globl _TI
                             33 	.globl _RB8
                             34 	.globl _TB8
                             35 	.globl _REN
                             36 	.globl _SM2
                             37 	.globl _SM1
                             38 	.globl _FE
                             39 	.globl _SM0
                             40 	.globl _CP_RL2
                             41 	.globl _C_T2
                             42 	.globl _TR2
                             43 	.globl _EXEN2
                             44 	.globl _TCLK
                             45 	.globl _RCLK
                             46 	.globl _EXF2
                             47 	.globl _TF2
                             48 	.globl _IT0
                             49 	.globl _IE0
                             50 	.globl _IT1
                             51 	.globl _IE1
                             52 	.globl _TR0
                             53 	.globl _TF0
                             54 	.globl _TR1
                             55 	.globl _TF1
                             56 	.globl _P
                             57 	.globl _UD
                             58 	.globl _OV
                             59 	.globl _RS0
                             60 	.globl _RS1
                             61 	.globl _F0
                             62 	.globl _AC
                             63 	.globl _CY
                             64 	.globl _P4_0
                             65 	.globl _P4_1
                             66 	.globl _RXD
                             67 	.globl _TXD
                             68 	.globl _INT0
                             69 	.globl _INT1
                             70 	.globl _T0
                             71 	.globl _T1
                             72 	.globl _WR
                             73 	.globl _RD
                             74 	.globl _P3_0
                             75 	.globl _P3_1
                             76 	.globl _P3_2
                             77 	.globl _P3_3
                             78 	.globl _P3_4
                             79 	.globl _P3_5
                             80 	.globl _P3_6
                             81 	.globl _P3_7
                             82 	.globl _P2_0
                             83 	.globl _P2_1
                             84 	.globl _P1_0
                             85 	.globl _P1_1
                             86 	.globl _P1_2
                             87 	.globl _P1_3
                             88 	.globl _P1_4
                             89 	.globl _P1_5
                             90 	.globl _P1_6
                             91 	.globl _P1_7
                             92 	.globl _CANEN
                             93 	.globl _CANIDM4
                             94 	.globl _CANIDM3
                             95 	.globl _CANIDM2
                             96 	.globl _CANIDM1
                             97 	.globl _CANIE
                             98 	.globl _CANGIE
                             99 	.globl _CANIDT4
                            100 	.globl _CANIDT3
                            101 	.globl _CANIDT2
                            102 	.globl _CANIDT1
                            103 	.globl _CANSIT
                            104 	.globl _CANBT3
                            105 	.globl _CANBT2
                            106 	.globl _CANBT1
                            107 	.globl _CANCONCH
                            108 	.globl _CANSTCH
                            109 	.globl _CANPAGE
                            110 	.globl _CANSTMPH
                            111 	.globl _CANSTMPL
                            112 	.globl _CANTIMH
                            113 	.globl _CANTIML
                            114 	.globl _CANGCON
                            115 	.globl _CANGSTA
                            116 	.globl _CANTTCH
                            117 	.globl _CANTTCL
                            118 	.globl _CANMSG
                            119 	.globl _CANTCON
                            120 	.globl _CANREC
                            121 	.globl _CANTEC
                            122 	.globl _CANGIT
                            123 	.globl _CCAPM4
                            124 	.globl _CCAP4L
                            125 	.globl _CCAP4H
                            126 	.globl _CCAPM3
                            127 	.globl _CCAP3L
                            128 	.globl _CCAP3H
                            129 	.globl _CCAPM2
                            130 	.globl _CCAP2L
                            131 	.globl _CCAP2H
                            132 	.globl _CCAPM1
                            133 	.globl _CCAP1L
                            134 	.globl _CCAP1H
                            135 	.globl _CCAPM0
                            136 	.globl _CCAP0L
                            137 	.globl _CCAP0H
                            138 	.globl _CL
                            139 	.globl _CH
                            140 	.globl _CMOD
                            141 	.globl _CCON
                            142 	.globl _IEN1
                            143 	.globl _IPH0
                            144 	.globl _IPL0
                            145 	.globl _IEN0
                            146 	.globl _IPH1
                            147 	.globl _IPL1
                            148 	.globl _AUXR1
                            149 	.globl _AUXR
                            150 	.globl _EECON
                            151 	.globl _FCON
                            152 	.globl _ADCF
                            153 	.globl _ADDH
                            154 	.globl _ADDL
                            155 	.globl _ADCON
                            156 	.globl _ADCLK
                            157 	.globl _SADDR
                            158 	.globl _SADEN
                            159 	.globl _SBUF
                            160 	.globl _SCON
                            161 	.globl _WDTPRG
                            162 	.globl _WDTRST
                            163 	.globl _RCAP2H
                            164 	.globl _RCAP2L
                            165 	.globl _TH2
                            166 	.globl _TH1
                            167 	.globl _TH0
                            168 	.globl _TL2
                            169 	.globl _TL1
                            170 	.globl _TL0
                            171 	.globl _T2MOD
                            172 	.globl _T2CON
                            173 	.globl _TMOD
                            174 	.globl _TCON
                            175 	.globl _CKCON
                            176 	.globl _PCON
                            177 	.globl _DPH
                            178 	.globl _DPL
                            179 	.globl _SP
                            180 	.globl _B
                            181 	.globl _ACC
                            182 	.globl _PSW
                            183 	.globl _P4
                            184 	.globl _P3
                            185 	.globl _P2
                            186 	.globl _P1
                            187 	.globl _PcaSetPwm_PARM_2
                            188 	.globl _ePcaModePca1
                            189 	.globl _ePcaModePca0
                            190 	.globl _ePcaClkSource
                            191 	.globl _PcaInit
                            192 	.globl _PcaInitModul
                            193 	.globl _PcaGetMode
                            194 	.globl _PcaSetPwm
                            195 ;--------------------------------------------------------
                            196 ; special function registers
                            197 ;--------------------------------------------------------
                            198 	.area RSEG    (DATA)
                    0090    199 G$P1$0$0 == 0x0090
                    0090    200 _P1	=	0x0090
                    00A0    201 G$P2$0$0 == 0x00a0
                    00A0    202 _P2	=	0x00a0
                    00B0    203 G$P3$0$0 == 0x00b0
                    00B0    204 _P3	=	0x00b0
                    00C0    205 G$P4$0$0 == 0x00c0
                    00C0    206 _P4	=	0x00c0
                    00D0    207 G$PSW$0$0 == 0x00d0
                    00D0    208 _PSW	=	0x00d0
                    00E0    209 G$ACC$0$0 == 0x00e0
                    00E0    210 _ACC	=	0x00e0
                    00F0    211 G$B$0$0 == 0x00f0
                    00F0    212 _B	=	0x00f0
                    0081    213 G$SP$0$0 == 0x0081
                    0081    214 _SP	=	0x0081
                    0082    215 G$DPL$0$0 == 0x0082
                    0082    216 _DPL	=	0x0082
                    0083    217 G$DPH$0$0 == 0x0083
                    0083    218 _DPH	=	0x0083
                    0087    219 G$PCON$0$0 == 0x0087
                    0087    220 _PCON	=	0x0087
                    008F    221 G$CKCON$0$0 == 0x008f
                    008F    222 _CKCON	=	0x008f
                    0088    223 G$TCON$0$0 == 0x0088
                    0088    224 _TCON	=	0x0088
                    0089    225 G$TMOD$0$0 == 0x0089
                    0089    226 _TMOD	=	0x0089
                    00C8    227 G$T2CON$0$0 == 0x00c8
                    00C8    228 _T2CON	=	0x00c8
                    00C9    229 G$T2MOD$0$0 == 0x00c9
                    00C9    230 _T2MOD	=	0x00c9
                    008A    231 G$TL0$0$0 == 0x008a
                    008A    232 _TL0	=	0x008a
                    008B    233 G$TL1$0$0 == 0x008b
                    008B    234 _TL1	=	0x008b
                    00CC    235 G$TL2$0$0 == 0x00cc
                    00CC    236 _TL2	=	0x00cc
                    008C    237 G$TH0$0$0 == 0x008c
                    008C    238 _TH0	=	0x008c
                    008D    239 G$TH1$0$0 == 0x008d
                    008D    240 _TH1	=	0x008d
                    00CD    241 G$TH2$0$0 == 0x00cd
                    00CD    242 _TH2	=	0x00cd
                    00CA    243 G$RCAP2L$0$0 == 0x00ca
                    00CA    244 _RCAP2L	=	0x00ca
                    00CB    245 G$RCAP2H$0$0 == 0x00cb
                    00CB    246 _RCAP2H	=	0x00cb
                    00A6    247 G$WDTRST$0$0 == 0x00a6
                    00A6    248 _WDTRST	=	0x00a6
                    00A7    249 G$WDTPRG$0$0 == 0x00a7
                    00A7    250 _WDTPRG	=	0x00a7
                    0098    251 G$SCON$0$0 == 0x0098
                    0098    252 _SCON	=	0x0098
                    0099    253 G$SBUF$0$0 == 0x0099
                    0099    254 _SBUF	=	0x0099
                    00B9    255 G$SADEN$0$0 == 0x00b9
                    00B9    256 _SADEN	=	0x00b9
                    00A9    257 G$SADDR$0$0 == 0x00a9
                    00A9    258 _SADDR	=	0x00a9
                    00F2    259 G$ADCLK$0$0 == 0x00f2
                    00F2    260 _ADCLK	=	0x00f2
                    00F3    261 G$ADCON$0$0 == 0x00f3
                    00F3    262 _ADCON	=	0x00f3
                    00F4    263 G$ADDL$0$0 == 0x00f4
                    00F4    264 _ADDL	=	0x00f4
                    00F5    265 G$ADDH$0$0 == 0x00f5
                    00F5    266 _ADDH	=	0x00f5
                    00F6    267 G$ADCF$0$0 == 0x00f6
                    00F6    268 _ADCF	=	0x00f6
                    00D1    269 G$FCON$0$0 == 0x00d1
                    00D1    270 _FCON	=	0x00d1
                    00D2    271 G$EECON$0$0 == 0x00d2
                    00D2    272 _EECON	=	0x00d2
                    008E    273 G$AUXR$0$0 == 0x008e
                    008E    274 _AUXR	=	0x008e
                    00A2    275 G$AUXR1$0$0 == 0x00a2
                    00A2    276 _AUXR1	=	0x00a2
                    00F8    277 G$IPL1$0$0 == 0x00f8
                    00F8    278 _IPL1	=	0x00f8
                    00F7    279 G$IPH1$0$0 == 0x00f7
                    00F7    280 _IPH1	=	0x00f7
                    00A8    281 G$IEN0$0$0 == 0x00a8
                    00A8    282 _IEN0	=	0x00a8
                    00B8    283 G$IPL0$0$0 == 0x00b8
                    00B8    284 _IPL0	=	0x00b8
                    00B7    285 G$IPH0$0$0 == 0x00b7
                    00B7    286 _IPH0	=	0x00b7
                    00E8    287 G$IEN1$0$0 == 0x00e8
                    00E8    288 _IEN1	=	0x00e8
                    00D8    289 G$CCON$0$0 == 0x00d8
                    00D8    290 _CCON	=	0x00d8
                    00D9    291 G$CMOD$0$0 == 0x00d9
                    00D9    292 _CMOD	=	0x00d9
                    00F9    293 G$CH$0$0 == 0x00f9
                    00F9    294 _CH	=	0x00f9
                    00E9    295 G$CL$0$0 == 0x00e9
                    00E9    296 _CL	=	0x00e9
                    00FA    297 G$CCAP0H$0$0 == 0x00fa
                    00FA    298 _CCAP0H	=	0x00fa
                    00EA    299 G$CCAP0L$0$0 == 0x00ea
                    00EA    300 _CCAP0L	=	0x00ea
                    00DA    301 G$CCAPM0$0$0 == 0x00da
                    00DA    302 _CCAPM0	=	0x00da
                    00FB    303 G$CCAP1H$0$0 == 0x00fb
                    00FB    304 _CCAP1H	=	0x00fb
                    00EB    305 G$CCAP1L$0$0 == 0x00eb
                    00EB    306 _CCAP1L	=	0x00eb
                    00DB    307 G$CCAPM1$0$0 == 0x00db
                    00DB    308 _CCAPM1	=	0x00db
                    00FC    309 G$CCAP2H$0$0 == 0x00fc
                    00FC    310 _CCAP2H	=	0x00fc
                    00EC    311 G$CCAP2L$0$0 == 0x00ec
                    00EC    312 _CCAP2L	=	0x00ec
                    00DC    313 G$CCAPM2$0$0 == 0x00dc
                    00DC    314 _CCAPM2	=	0x00dc
                    00FD    315 G$CCAP3H$0$0 == 0x00fd
                    00FD    316 _CCAP3H	=	0x00fd
                    00ED    317 G$CCAP3L$0$0 == 0x00ed
                    00ED    318 _CCAP3L	=	0x00ed
                    00DD    319 G$CCAPM3$0$0 == 0x00dd
                    00DD    320 _CCAPM3	=	0x00dd
                    00FE    321 G$CCAP4H$0$0 == 0x00fe
                    00FE    322 _CCAP4H	=	0x00fe
                    00EE    323 G$CCAP4L$0$0 == 0x00ee
                    00EE    324 _CCAP4L	=	0x00ee
                    00DE    325 G$CCAPM4$0$0 == 0x00de
                    00DE    326 _CCAPM4	=	0x00de
                    009B    327 G$CANGIT$0$0 == 0x009b
                    009B    328 _CANGIT	=	0x009b
                    009C    329 G$CANTEC$0$0 == 0x009c
                    009C    330 _CANTEC	=	0x009c
                    009D    331 G$CANREC$0$0 == 0x009d
                    009D    332 _CANREC	=	0x009d
                    00A1    333 G$CANTCON$0$0 == 0x00a1
                    00A1    334 _CANTCON	=	0x00a1
                    00A3    335 G$CANMSG$0$0 == 0x00a3
                    00A3    336 _CANMSG	=	0x00a3
                    00A4    337 G$CANTTCL$0$0 == 0x00a4
                    00A4    338 _CANTTCL	=	0x00a4
                    00A5    339 G$CANTTCH$0$0 == 0x00a5
                    00A5    340 _CANTTCH	=	0x00a5
                    00AA    341 G$CANGSTA$0$0 == 0x00aa
                    00AA    342 _CANGSTA	=	0x00aa
                    00AB    343 G$CANGCON$0$0 == 0x00ab
                    00AB    344 _CANGCON	=	0x00ab
                    00AC    345 G$CANTIML$0$0 == 0x00ac
                    00AC    346 _CANTIML	=	0x00ac
                    00AD    347 G$CANTIMH$0$0 == 0x00ad
                    00AD    348 _CANTIMH	=	0x00ad
                    00AE    349 G$CANSTMPL$0$0 == 0x00ae
                    00AE    350 _CANSTMPL	=	0x00ae
                    00AF    351 G$CANSTMPH$0$0 == 0x00af
                    00AF    352 _CANSTMPH	=	0x00af
                    00B1    353 G$CANPAGE$0$0 == 0x00b1
                    00B1    354 _CANPAGE	=	0x00b1
                    00B2    355 G$CANSTCH$0$0 == 0x00b2
                    00B2    356 _CANSTCH	=	0x00b2
                    00B3    357 G$CANCONCH$0$0 == 0x00b3
                    00B3    358 _CANCONCH	=	0x00b3
                    00B4    359 G$CANBT1$0$0 == 0x00b4
                    00B4    360 _CANBT1	=	0x00b4
                    00B5    361 G$CANBT2$0$0 == 0x00b5
                    00B5    362 _CANBT2	=	0x00b5
                    00B6    363 G$CANBT3$0$0 == 0x00b6
                    00B6    364 _CANBT3	=	0x00b6
                    00BB    365 G$CANSIT$0$0 == 0x00bb
                    00BB    366 _CANSIT	=	0x00bb
                    00BC    367 G$CANIDT1$0$0 == 0x00bc
                    00BC    368 _CANIDT1	=	0x00bc
                    00BD    369 G$CANIDT2$0$0 == 0x00bd
                    00BD    370 _CANIDT2	=	0x00bd
                    00BE    371 G$CANIDT3$0$0 == 0x00be
                    00BE    372 _CANIDT3	=	0x00be
                    00BF    373 G$CANIDT4$0$0 == 0x00bf
                    00BF    374 _CANIDT4	=	0x00bf
                    00C1    375 G$CANGIE$0$0 == 0x00c1
                    00C1    376 _CANGIE	=	0x00c1
                    00C3    377 G$CANIE$0$0 == 0x00c3
                    00C3    378 _CANIE	=	0x00c3
                    00C4    379 G$CANIDM1$0$0 == 0x00c4
                    00C4    380 _CANIDM1	=	0x00c4
                    00C5    381 G$CANIDM2$0$0 == 0x00c5
                    00C5    382 _CANIDM2	=	0x00c5
                    00C6    383 G$CANIDM3$0$0 == 0x00c6
                    00C6    384 _CANIDM3	=	0x00c6
                    00C7    385 G$CANIDM4$0$0 == 0x00c7
                    00C7    386 _CANIDM4	=	0x00c7
                    00CF    387 G$CANEN$0$0 == 0x00cf
                    00CF    388 _CANEN	=	0x00cf
                            389 ;--------------------------------------------------------
                            390 ; special function bits
                            391 ;--------------------------------------------------------
                            392 	.area RSEG    (DATA)
                    0097    393 G$P1_7$0$0 == 0x0097
                    0097    394 _P1_7	=	0x0097
                    0096    395 G$P1_6$0$0 == 0x0096
                    0096    396 _P1_6	=	0x0096
                    0095    397 G$P1_5$0$0 == 0x0095
                    0095    398 _P1_5	=	0x0095
                    0094    399 G$P1_4$0$0 == 0x0094
                    0094    400 _P1_4	=	0x0094
                    0093    401 G$P1_3$0$0 == 0x0093
                    0093    402 _P1_3	=	0x0093
                    0092    403 G$P1_2$0$0 == 0x0092
                    0092    404 _P1_2	=	0x0092
                    0091    405 G$P1_1$0$0 == 0x0091
                    0091    406 _P1_1	=	0x0091
                    0090    407 G$P1_0$0$0 == 0x0090
                    0090    408 _P1_0	=	0x0090
                    00A1    409 G$P2_1$0$0 == 0x00a1
                    00A1    410 _P2_1	=	0x00a1
                    00A0    411 G$P2_0$0$0 == 0x00a0
                    00A0    412 _P2_0	=	0x00a0
                    00B7    413 G$P3_7$0$0 == 0x00b7
                    00B7    414 _P3_7	=	0x00b7
                    00B6    415 G$P3_6$0$0 == 0x00b6
                    00B6    416 _P3_6	=	0x00b6
                    00B5    417 G$P3_5$0$0 == 0x00b5
                    00B5    418 _P3_5	=	0x00b5
                    00B4    419 G$P3_4$0$0 == 0x00b4
                    00B4    420 _P3_4	=	0x00b4
                    00B3    421 G$P3_3$0$0 == 0x00b3
                    00B3    422 _P3_3	=	0x00b3
                    00B2    423 G$P3_2$0$0 == 0x00b2
                    00B2    424 _P3_2	=	0x00b2
                    00B1    425 G$P3_1$0$0 == 0x00b1
                    00B1    426 _P3_1	=	0x00b1
                    00B0    427 G$P3_0$0$0 == 0x00b0
                    00B0    428 _P3_0	=	0x00b0
                    00B7    429 G$RD$0$0 == 0x00b7
                    00B7    430 _RD	=	0x00b7
                    00B6    431 G$WR$0$0 == 0x00b6
                    00B6    432 _WR	=	0x00b6
                    00B5    433 G$T1$0$0 == 0x00b5
                    00B5    434 _T1	=	0x00b5
                    00B4    435 G$T0$0$0 == 0x00b4
                    00B4    436 _T0	=	0x00b4
                    00B3    437 G$INT1$0$0 == 0x00b3
                    00B3    438 _INT1	=	0x00b3
                    00B2    439 G$INT0$0$0 == 0x00b2
                    00B2    440 _INT0	=	0x00b2
                    00B1    441 G$TXD$0$0 == 0x00b1
                    00B1    442 _TXD	=	0x00b1
                    00B0    443 G$RXD$0$0 == 0x00b0
                    00B0    444 _RXD	=	0x00b0
                    00C1    445 G$P4_1$0$0 == 0x00c1
                    00C1    446 _P4_1	=	0x00c1
                    00C0    447 G$P4_0$0$0 == 0x00c0
                    00C0    448 _P4_0	=	0x00c0
                    00D7    449 G$CY$0$0 == 0x00d7
                    00D7    450 _CY	=	0x00d7
                    00D6    451 G$AC$0$0 == 0x00d6
                    00D6    452 _AC	=	0x00d6
                    00D5    453 G$F0$0$0 == 0x00d5
                    00D5    454 _F0	=	0x00d5
                    00D4    455 G$RS1$0$0 == 0x00d4
                    00D4    456 _RS1	=	0x00d4
                    00D3    457 G$RS0$0$0 == 0x00d3
                    00D3    458 _RS0	=	0x00d3
                    00D2    459 G$OV$0$0 == 0x00d2
                    00D2    460 _OV	=	0x00d2
                    00D1    461 G$UD$0$0 == 0x00d1
                    00D1    462 _UD	=	0x00d1
                    00D0    463 G$P$0$0 == 0x00d0
                    00D0    464 _P	=	0x00d0
                    008F    465 G$TF1$0$0 == 0x008f
                    008F    466 _TF1	=	0x008f
                    008E    467 G$TR1$0$0 == 0x008e
                    008E    468 _TR1	=	0x008e
                    008D    469 G$TF0$0$0 == 0x008d
                    008D    470 _TF0	=	0x008d
                    008C    471 G$TR0$0$0 == 0x008c
                    008C    472 _TR0	=	0x008c
                    008B    473 G$IE1$0$0 == 0x008b
                    008B    474 _IE1	=	0x008b
                    008A    475 G$IT1$0$0 == 0x008a
                    008A    476 _IT1	=	0x008a
                    0089    477 G$IE0$0$0 == 0x0089
                    0089    478 _IE0	=	0x0089
                    0088    479 G$IT0$0$0 == 0x0088
                    0088    480 _IT0	=	0x0088
                    00CF    481 G$TF2$0$0 == 0x00cf
                    00CF    482 _TF2	=	0x00cf
                    00CE    483 G$EXF2$0$0 == 0x00ce
                    00CE    484 _EXF2	=	0x00ce
                    00CD    485 G$RCLK$0$0 == 0x00cd
                    00CD    486 _RCLK	=	0x00cd
                    00CC    487 G$TCLK$0$0 == 0x00cc
                    00CC    488 _TCLK	=	0x00cc
                    00CB    489 G$EXEN2$0$0 == 0x00cb
                    00CB    490 _EXEN2	=	0x00cb
                    00CA    491 G$TR2$0$0 == 0x00ca
                    00CA    492 _TR2	=	0x00ca
                    00C9    493 G$C_T2$0$0 == 0x00c9
                    00C9    494 _C_T2	=	0x00c9
                    00C8    495 G$CP_RL2$0$0 == 0x00c8
                    00C8    496 _CP_RL2	=	0x00c8
                    009F    497 G$SM0$0$0 == 0x009f
                    009F    498 _SM0	=	0x009f
                    009F    499 G$FE$0$0 == 0x009f
                    009F    500 _FE	=	0x009f
                    009E    501 G$SM1$0$0 == 0x009e
                    009E    502 _SM1	=	0x009e
                    009D    503 G$SM2$0$0 == 0x009d
                    009D    504 _SM2	=	0x009d
                    009C    505 G$REN$0$0 == 0x009c
                    009C    506 _REN	=	0x009c
                    009B    507 G$TB8$0$0 == 0x009b
                    009B    508 _TB8	=	0x009b
                    009A    509 G$RB8$0$0 == 0x009a
                    009A    510 _RB8	=	0x009a
                    0099    511 G$TI$0$0 == 0x0099
                    0099    512 _TI	=	0x0099
                    0098    513 G$RI$0$0 == 0x0098
                    0098    514 _RI	=	0x0098
                    00AF    515 G$EA$0$0 == 0x00af
                    00AF    516 _EA	=	0x00af
                    00AE    517 G$EC$0$0 == 0x00ae
                    00AE    518 _EC	=	0x00ae
                    00AD    519 G$ET2$0$0 == 0x00ad
                    00AD    520 _ET2	=	0x00ad
                    00AC    521 G$ES$0$0 == 0x00ac
                    00AC    522 _ES	=	0x00ac
                    00AB    523 G$ET1$0$0 == 0x00ab
                    00AB    524 _ET1	=	0x00ab
                    00AA    525 G$EX1$0$0 == 0x00aa
                    00AA    526 _EX1	=	0x00aa
                    00A9    527 G$ET0$0$0 == 0x00a9
                    00A9    528 _ET0	=	0x00a9
                    00A8    529 G$EX0$0$0 == 0x00a8
                    00A8    530 _EX0	=	0x00a8
                    00EA    531 G$ETIM$0$0 == 0x00ea
                    00EA    532 _ETIM	=	0x00ea
                    00E9    533 G$EADC$0$0 == 0x00e9
                    00E9    534 _EADC	=	0x00e9
                    00E8    535 G$ECAN$0$0 == 0x00e8
                    00E8    536 _ECAN	=	0x00e8
                    00DF    537 G$CF$0$0 == 0x00df
                    00DF    538 _CF	=	0x00df
                    00DE    539 G$CR$0$0 == 0x00de
                    00DE    540 _CR	=	0x00de
                    00DC    541 G$CCF4$0$0 == 0x00dc
                    00DC    542 _CCF4	=	0x00dc
                    00DB    543 G$CCF3$0$0 == 0x00db
                    00DB    544 _CCF3	=	0x00db
                    00DA    545 G$CCF2$0$0 == 0x00da
                    00DA    546 _CCF2	=	0x00da
                    00D9    547 G$CCF1$0$0 == 0x00d9
                    00D9    548 _CCF1	=	0x00d9
                    00D8    549 G$CCF0$0$0 == 0x00d8
                    00D8    550 _CCF0	=	0x00d8
                            551 ;--------------------------------------------------------
                            552 ; overlayable register banks
                            553 ;--------------------------------------------------------
                            554 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     555 	.ds 8
                            556 ;--------------------------------------------------------
                            557 ; internal ram data
                            558 ;--------------------------------------------------------
                            559 	.area DSEG    (DATA)
                    0000    560 G$ePcaClkSource$0$0==.
   0000                     561 _ePcaClkSource::
   0000                     562 	.ds 1
                    0001    563 G$ePcaModePca0$0$0==.
   0001                     564 _ePcaModePca0::
   0001                     565 	.ds 1
                    0002    566 G$ePcaModePca1$0$0==.
   0002                     567 _ePcaModePca1::
   0002                     568 	.ds 1
                    0003    569 LPcaSetPwm$u8PwmWert$1$1==.
   0003                     570 _PcaSetPwm_PARM_2:
   0003                     571 	.ds 1
                            572 ;--------------------------------------------------------
                            573 ; overlayable items in internal ram 
                            574 ;--------------------------------------------------------
                            575 	.area	OSEG    (OVR,DATA)
                            576 	.area	OSEG    (OVR,DATA)
                    0000    577 LPcaInitModul$ePcaMode$1$1==.
   0000                     578 _PcaInitModul_PARM_2::
   0000                     579 	.ds 1
                            580 	.area	OSEG    (OVR,DATA)
                            581 ;--------------------------------------------------------
                            582 ; indirectly addressable internal ram data
                            583 ;--------------------------------------------------------
                            584 	.area ISEG    (DATA)
                            585 ;--------------------------------------------------------
                            586 ; absolute internal ram data
                            587 ;--------------------------------------------------------
                            588 	.area IABS    (ABS,DATA)
                            589 	.area IABS    (ABS,DATA)
                            590 ;--------------------------------------------------------
                            591 ; bit data
                            592 ;--------------------------------------------------------
                            593 	.area BSEG    (BIT)
                            594 ;--------------------------------------------------------
                            595 ; paged external ram data
                            596 ;--------------------------------------------------------
                            597 	.area PSEG    (PAG,XDATA)
                            598 ;--------------------------------------------------------
                            599 ; external ram data
                            600 ;--------------------------------------------------------
                            601 	.area XSEG    (XDATA)
                            602 ;--------------------------------------------------------
                            603 ; absolute external ram data
                            604 ;--------------------------------------------------------
                            605 	.area XABS    (ABS,XDATA)
                            606 ;--------------------------------------------------------
                            607 ; external initialized ram data
                            608 ;--------------------------------------------------------
                            609 	.area XISEG   (XDATA)
                            610 	.area HOME    (CODE)
                            611 	.area GSINIT0 (CODE)
                            612 	.area GSINIT1 (CODE)
                            613 	.area GSINIT2 (CODE)
                            614 	.area GSINIT3 (CODE)
                            615 	.area GSINIT4 (CODE)
                            616 	.area GSINIT5 (CODE)
                            617 	.area GSINIT  (CODE)
                            618 	.area GSFINAL (CODE)
                            619 	.area CSEG    (CODE)
                            620 ;--------------------------------------------------------
                            621 ; global & static initialisations
                            622 ;--------------------------------------------------------
                            623 	.area HOME    (CODE)
                            624 	.area GSINIT  (CODE)
                            625 	.area GSFINAL (CODE)
                            626 	.area GSINIT  (CODE)
                    0000    627 	G$PcaSetPwm$0$0 ==.
                    0000    628 	C$pca.c$17$1$1 ==.
                            629 ;	pca.c:17: TPcaClkSource ePcaClkSource = -1;   ///< Speichert die Taktquelle
   0000 75*00 FF            630 	mov	_ePcaClkSource,#0xFF
                    0003    631 	G$PcaSetPwm$0$0 ==.
                    0003    632 	C$pca.c$18$1$1 ==.
                            633 ;	pca.c:18: TPcaMode ePcaModePca0 = -1;         ///< Speichert den Modus des PCA-Modul 0
   0003 75*01 FF            634 	mov	_ePcaModePca0,#0xFF
                    0006    635 	G$PcaSetPwm$0$0 ==.
                    0006    636 	C$pca.c$19$1$1 ==.
                            637 ;	pca.c:19: TPcaMode ePcaModePca1 = -1;         ///< Speichert den Modus des PCA-Modul 1
   0006 75*02 FF            638 	mov	_ePcaModePca1,#0xFF
                            639 ;--------------------------------------------------------
                            640 ; Home
                            641 ;--------------------------------------------------------
                            642 	.area HOME    (CODE)
                            643 	.area HOME    (CODE)
                            644 ;--------------------------------------------------------
                            645 ; code
                            646 ;--------------------------------------------------------
                            647 	.area CSEG    (CODE)
                            648 ;------------------------------------------------------------
                            649 ;Allocation info for local variables in function 'PcaInit'
                            650 ;------------------------------------------------------------
                            651 ;eQuelle                   Allocated to registers r2 
                            652 ;------------------------------------------------------------
                    0000    653 	G$PcaInit$0$0 ==.
                    0000    654 	C$pca.c$29$0$0 ==.
                            655 ;	pca.c:29: void PcaInit(TPcaClkSource eQuelle)
                            656 ;	-----------------------------------------
                            657 ;	 function PcaInit
                            658 ;	-----------------------------------------
   0000                     659 _PcaInit:
                    0002    660 	ar2 = 0x02
                    0003    661 	ar3 = 0x03
                    0004    662 	ar4 = 0x04
                    0005    663 	ar5 = 0x05
                    0006    664 	ar6 = 0x06
                    0007    665 	ar7 = 0x07
                    0000    666 	ar0 = 0x00
                    0001    667 	ar1 = 0x01
   0000 AA 82               668 	mov	r2,dpl
                    0002    669 	C$pca.c$31$1$1 ==.
                            670 ;	pca.c:31: CMOD = 0x00;
   0002 75 D9 00            671 	mov	_CMOD,#0x00
                    0005    672 	C$pca.c$32$1$1 ==.
                            673 ;	pca.c:32: CMOD |= (eQuelle & 0x03) << 1;
   0005 74 03               674 	mov	a,#0x03
   0007 5A                  675 	anl	a,r2
   0008 25 E0               676 	add	a,acc
   000A 42 D9               677 	orl	_CMOD,a
                    000C    678 	C$pca.c$33$1$1 ==.
                            679 ;	pca.c:33: CMOD &= ~0x01;
   000C 53 D9 FE            680 	anl	_CMOD,#0xFE
                    000F    681 	C$pca.c$34$1$1 ==.
                            682 ;	pca.c:34: CCON |= 0x40;
   000F 43 D8 40            683 	orl	_CCON,#0x40
                    0012    684 	C$pca.c$35$1$1 ==.
                            685 ;	pca.c:35: ePcaClkSource = eQuelle;
   0012 8A*00               686 	mov	_ePcaClkSource,r2
                    0014    687 	C$pca.c$36$1$1 ==.
                    0014    688 	XG$PcaInit$0$0 ==.
   0014 22                  689 	ret
                            690 ;------------------------------------------------------------
                            691 ;Allocation info for local variables in function 'PcaInitModul'
                            692 ;------------------------------------------------------------
                            693 ;ePcaMode                  Allocated with name '_PcaInitModul_PARM_2'
                            694 ;ePcaModul                 Allocated to registers r2 
                            695 ;------------------------------------------------------------
                    0015    696 	G$PcaInitModul$0$0 ==.
                    0015    697 	C$pca.c$44$1$1 ==.
                            698 ;	pca.c:44: void PcaInitModul(TPcaModul ePcaModul, TPcaMode ePcaMode)
                            699 ;	-----------------------------------------
                            700 ;	 function PcaInitModul
                            701 ;	-----------------------------------------
   0015                     702 _PcaInitModul:
   0015 AA 82               703 	mov	r2,dpl
                    0017    704 	C$pca.c$46$1$1 ==.
                            705 ;	pca.c:46: switch (ePcaModul)
   0017 BA 00 02            706 	cjne	r2,#0x00,00108$
   001A 80 05               707 	sjmp	00101$
   001C                     708 00108$:
                    001C    709 	C$pca.c$48$2$2 ==.
                            710 ;	pca.c:48: case Pca0:
   001C BA 01 17            711 	cjne	r2,#0x01,00104$
   001F 80 0B               712 	sjmp	00102$
   0021                     713 00101$:
                    0021    714 	C$pca.c$50$3$3 ==.
                            715 ;	pca.c:50: CCAPM0 &= ~0x7E;
   0021 53 DA 81            716 	anl	_CCAPM0,#0x81
                    0024    717 	C$pca.c$51$3$3 ==.
                            718 ;	pca.c:51: CCAPM0 |= ePcaMode;
   0024 E5*00               719 	mov	a,_PcaInitModul_PARM_2
   0026 42 DA               720 	orl	_CCAPM0,a
                    0028    721 	C$pca.c$52$3$3 ==.
                            722 ;	pca.c:52: ePcaModePca0 = ePcaMode;
   0028 85*00*01            723 	mov	_ePcaModePca0,_PcaInitModul_PARM_2
                    002B    724 	C$pca.c$53$3$3 ==.
                            725 ;	pca.c:53: break;
                    002B    726 	C$pca.c$56$2$2 ==.
                            727 ;	pca.c:56: case Pca1:
   002B 22                  728 	ret
   002C                     729 00102$:
                    002C    730 	C$pca.c$58$3$4 ==.
                            731 ;	pca.c:58: CCAPM1 &= ~0x7E;
   002C 53 DB 81            732 	anl	_CCAPM1,#0x81
                    002F    733 	C$pca.c$59$3$4 ==.
                            734 ;	pca.c:59: CCAPM1 |= ePcaMode;
   002F E5*00               735 	mov	a,_PcaInitModul_PARM_2
   0031 42 DB               736 	orl	_CCAPM1,a
                    0033    737 	C$pca.c$60$3$4 ==.
                            738 ;	pca.c:60: ePcaModePca1 = ePcaMode;
   0033 85*00*02            739 	mov	_ePcaModePca1,_PcaInitModul_PARM_2
                    0036    740 	C$pca.c$63$1$1 ==.
                            741 ;	pca.c:63: }
   0036                     742 00104$:
                    0036    743 	C$pca.c$64$1$1 ==.
                    0036    744 	XG$PcaInitModul$0$0 ==.
   0036 22                  745 	ret
                            746 ;------------------------------------------------------------
                            747 ;Allocation info for local variables in function 'PcaGetMode'
                            748 ;------------------------------------------------------------
                            749 ;ePcaModul                 Allocated to registers r2 
                            750 ;------------------------------------------------------------
                    0037    751 	G$PcaGetMode$0$0 ==.
                    0037    752 	C$pca.c$72$1$1 ==.
                            753 ;	pca.c:72: TPcaMode PcaGetMode(TPcaModul ePcaModul)
                            754 ;	-----------------------------------------
                            755 ;	 function PcaGetMode
                            756 ;	-----------------------------------------
   0037                     757 _PcaGetMode:
   0037 AA 82               758 	mov	r2,dpl
                    0039    759 	C$pca.c$74$1$1 ==.
                            760 ;	pca.c:74: switch (ePcaModul)
   0039 BA 00 02            761 	cjne	r2,#0x00,00109$
   003C 80 05               762 	sjmp	00101$
   003E                     763 00109$:
                    003E    764 	C$pca.c$76$2$2 ==.
                            765 ;	pca.c:76: case Pca0:
   003E BA 01 10            766 	cjne	r2,#0x01,00103$
   0041 80 07               767 	sjmp	00102$
   0043                     768 00101$:
                    0043    769 	C$pca.c$78$3$3 ==.
                            770 ;	pca.c:78: return (CCAPM0 & 0x7E);
   0043 74 7E               771 	mov	a,#0x7E
   0045 55 DA               772 	anl	a,_CCAPM0
   0047 F5 82               773 	mov	dpl,a
                    0049    774 	C$pca.c$82$2$2 ==.
                            775 ;	pca.c:82: case Pca1:
   0049 22                  776 	ret
   004A                     777 00102$:
                    004A    778 	C$pca.c$84$3$4 ==.
                            779 ;	pca.c:84: return (CCAPM1 & 0x7E);
   004A 74 7E               780 	mov	a,#0x7E
   004C 55 DB               781 	anl	a,_CCAPM1
   004E F5 82               782 	mov	dpl,a
                    0050    783 	C$pca.c$87$2$2 ==.
                            784 ;	pca.c:87: default:
                    0050    785 	C$pca.c$89$3$5 ==.
                            786 ;	pca.c:89: return -1;
                    0050    787 	C$pca.c$92$1$1 ==.
                            788 ;	pca.c:92: }
                    0050    789 	C$pca.c$93$1$1 ==.
                    0050    790 	XG$PcaGetMode$0$0 ==.
   0050 22                  791 	ret
   0051                     792 00103$:
   0051 75 82 FF            793 	mov	dpl,#0xFF
   0054 22                  794 	ret
                            795 ;------------------------------------------------------------
                            796 ;Allocation info for local variables in function 'PcaSetPwm'
                            797 ;------------------------------------------------------------
                            798 ;u8PwmWert                 Allocated with name '_PcaSetPwm_PARM_2'
                            799 ;ePcaModul                 Allocated to registers r2 
                            800 ;------------------------------------------------------------
                    0055    801 	G$PcaSetPwm$0$0 ==.
                    0055    802 	C$pca.c$105$1$1 ==.
                            803 ;	pca.c:105: __s16 PcaSetPwm(TPcaModul ePcaModul, __u8 u8PwmWert)
                            804 ;	-----------------------------------------
                            805 ;	 function PcaSetPwm
                            806 ;	-----------------------------------------
   0055                     807 _PcaSetPwm:
                    0055    808 	C$pca.c$107$1$1 ==.
                            809 ;	pca.c:107: if (PcaGetMode(ePcaModul) != Pwm)
   0055 AA 82               810 	mov  r2,dpl
   0057 C0 02               811 	push	ar2
   0059 12s00r37            812 	lcall	_PcaGetMode
   005C AB 82               813 	mov	r3,dpl
   005E D0 02               814 	pop	ar2
   0060 BB 42 02            815 	cjne	r3,#0x42,00112$
   0063 80 04               816 	sjmp	00102$
   0065                     817 00112$:
                    0065    818 	C$pca.c$109$2$2 ==.
                            819 ;	pca.c:109: return -1;
   0065 90 FF FF            820 	mov	dptr,#0xFFFF
   0068 22                  821 	ret
   0069                     822 00102$:
                    0069    823 	C$pca.c$112$1$1 ==.
                            824 ;	pca.c:112: switch (ePcaModul)
   0069 BA 00 02            825 	cjne	r2,#0x00,00113$
   006C 80 05               826 	sjmp	00103$
   006E                     827 00113$:
                    006E    828 	C$pca.c$114$2$3 ==.
                            829 ;	pca.c:114: case Pca0:
   006E BA 01 12            830 	cjne	r2,#0x01,00105$
   0071 80 08               831 	sjmp	00104$
   0073                     832 00103$:
                    0073    833 	C$pca.c$116$3$4 ==.
                            834 ;	pca.c:116: CCAP0H = u8PwmWert;
   0073 85*03 FA            835 	mov	_CCAP0H,_PcaSetPwm_PARM_2
                    0076    836 	C$pca.c$117$3$4 ==.
                            837 ;	pca.c:117: CCAPM0 |= 0x40;
   0076 43 DA 40            838 	orl	_CCAPM0,#0x40
                    0079    839 	C$pca.c$118$3$4 ==.
                            840 ;	pca.c:118: break;
                    0079    841 	C$pca.c$121$2$3 ==.
                            842 ;	pca.c:121: case Pca1:
   0079 80 0C               843 	sjmp	00106$
   007B                     844 00104$:
                    007B    845 	C$pca.c$123$3$5 ==.
                            846 ;	pca.c:123: CCAP1H = u8PwmWert;
   007B 85*03 FB            847 	mov	_CCAP1H,_PcaSetPwm_PARM_2
                    007E    848 	C$pca.c$124$3$5 ==.
                            849 ;	pca.c:124: CCAPM1 |= 0x40;
   007E 43 DB 40            850 	orl	_CCAPM1,#0x40
                    0081    851 	C$pca.c$125$3$5 ==.
                            852 ;	pca.c:125: break;
                    0081    853 	C$pca.c$128$2$3 ==.
                            854 ;	pca.c:128: default:
   0081 80 04               855 	sjmp	00106$
   0083                     856 00105$:
                    0083    857 	C$pca.c$130$3$6 ==.
                            858 ;	pca.c:130: return -2;
   0083 90 FF FE            859 	mov	dptr,#0xFFFE
                    0086    860 	C$pca.c$133$1$1 ==.
                            861 ;	pca.c:133: }
                    0086    862 	C$pca.c$135$1$1 ==.
                            863 ;	pca.c:135: return 0;
                    0086    864 	C$pca.c$136$1$1 ==.
                    0086    865 	XG$PcaSetPwm$0$0 ==.
   0086 22                  866 	ret
   0087                     867 00106$:
   0087 90 00 00            868 	mov	dptr,#0x0000
   008A 22                  869 	ret
                            870 	.area CSEG    (CODE)
                            871 	.area CONST   (CODE)
                            872 	.area XINIT   (CODE)
                            873 	.area CABS    (ABS,CODE)
