<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 6.0/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="flip_um.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE>
 
</TITLE>

</HEAD>
<BODY BGCOLOR="#ffffff">
<P CLASS="SHA-Section-Head-AcrossTOC">
<A NAME="pgfId-73252"></A><A HREF="flip_um.htm#pgfId-958150" CLASS="Index">Overview 	1</A></P>
<P CLASS="SHA-Section-Head-AcrossTOC">
<A NAME="pgfId-73254"></A><A HREF="flip_um.htm#pgfId-958226" CLASS="Index">Main Features 	1</A></P>
<P CLASS="SHA-Section-Head-AcrossTOC">
<A NAME="pgfId-73256"></A><A HREF="flip_um.htm#pgfId-957689" CLASS="Index">Software Installation and Setup 	1</A></P>
<P CLASS="SHS1A-Section-Head-Sub-1-AcrossTOC">
<A NAME="pgfId-73258"></A><A HREF="flip_um.htm#pgfId-960437" CLASS="Index">Windows Installation	 1</A></P>
<P CLASS="SHS1A-Section-Head-Sub-1-AcrossTOC">
<A NAME="pgfId-73260"></A><A HREF="flip_um.htm#pgfId-960438" CLASS="Index">Linux Installation	 2</A></P>
<DIV>
<H6 CLASS="SHNPA-Section-Head-New-Page-AcrossTOC">
<A NAME="pgfId-73262"></A><A HREF="flip_um.htm#pgfId-960436" CLASS="Index">Getting Started	 3</A></H6>
<P CLASS="SHA-Section-Head-AcrossTOC">
<A NAME="pgfId-73264"></A><A HREF="flip_um.htm#pgfId-962572" CLASS="Index">Selecting a device 	4</A></P>
<P CLASS="SHA-Section-Head-AcrossTOC">
<A NAME="pgfId-73266"></A><A HREF="flip_um.htm#pgfId-973639" CLASS="Index">Selecting a communication medium 	4</A></P>
<P CLASS="SHS1A-Section-Head-Sub-1-AcrossTOC">
<A NAME="pgfId-73268"></A><A HREF="flip_um.htm#pgfId-973656" CLASS="Index">RS232	 4</A></P>
<P CLASS="SHS1A-Section-Head-Sub-1-AcrossTOC">
<A NAME="pgfId-73270"></A><A HREF="flip_um.htm#pgfId-973655" CLASS="Index">CAN	 5</A></P>
<P CLASS="SHA-Section-Head-AcrossTOC">
<A NAME="pgfId-73272"></A><A HREF="flip_um.htm#pgfId-1015709" CLASS="Index">Device special bytes 	5</A></P>
<P CLASS="SHS1A-Section-Head-Sub-1-AcrossTOC">
<A NAME="pgfId-73274"></A><A HREF="flip_um.htm#pgfId-1015748" CLASS="Index">General options	 5</A></P>
<P CLASS="SHS1A-Section-Head-Sub-1-AcrossTOC">
<A NAME="pgfId-73276"></A><A HREF="flip_um.htm#pgfId-1015749" CLASS="Index">CAN options	 5</A></P>
<P CLASS="SHA-Section-Head-AcrossTOC">
<A NAME="pgfId-73278"></A><A HREF="flip_um.htm#pgfId-962574" CLASS="Index">Editing the buffer and setting options 	6</A></P>
<P CLASS="SHS1A-Section-Head-Sub-1-AcrossTOC">
<A NAME="pgfId-73280"></A><A HREF="flip_um.htm#pgfId-967073" CLASS="Index">The Edit Buffer window	 6</A></P>
<P CLASS="SHS1A-Section-Head-Sub-1-AcrossTOC">
<A NAME="pgfId-73282"></A><A HREF="flip_um.htm#pgfId-973991" CLASS="Index">The Buffer options window	 7</A></P>
<P CLASS="SHS1A-Section-Head-Sub-1-AcrossTOC">
<A NAME="pgfId-73284"></A><A HREF="flip_um.htm#pgfId-1013008" CLASS="Index">The Buffer Checksum	 8</A></P>
<P CLASS="SHA-Section-Head-AcrossTOC">
<A NAME="pgfId-73286"></A><A HREF="flip_um.htm#pgfId-973992" CLASS="Index">Executing operations on the target device 	8</A></P>
<P CLASS="SHA-Section-Head-AcrossTOC">
<A NAME="pgfId-73288"></A><A HREF="flip_um.htm#pgfId-974298" CLASS="Index">Operations flow 	9</A></P>
<P CLASS="SHA-Section-Head-AcrossTOC">
<A NAME="pgfId-73290"></A><A HREF="flip_um.htm#pgfId-966952" CLASS="Index">The history and command window 	9</A></P>
<P CLASS="SHA-Section-Head-AcrossTOC">
<A NAME="pgfId-73292"></A><A HREF="flip_um.htm#pgfId-1013021" CLASS="Index">Recording and replaying commands 	9</A></P>
<P CLASS="SHS1A-Section-Head-Sub-1-AcrossTOC">
<A NAME="pgfId-73294"></A><A HREF="flip_um.htm#pgfId-1013027" CLASS="Index">Building the configuration file automatically	 10</A></P>
<P CLASS="SHS1A-Section-Head-Sub-1-AcrossTOC">
<A NAME="pgfId-73296"></A><A HREF="flip_um.htm#pgfId-1013064" CLASS="Index">Loading and running the configuration file	 10</A></P>
<P CLASS="SHS1A-Section-Head-Sub-1-AcrossTOC">
<A NAME="pgfId-73298"></A><A HREF="flip_um.htm#pgfId-1013090" CLASS="Index">Building a configuration file using a text editor	 10</A></P>
<P CLASS="SHS1A-Section-Head-Sub-1-AcrossTOC">
<A NAME="pgfId-73300"></A><A HREF="flip_um.htm#pgfId-1052938" CLASS="Index">Serializing Parts	 12</A></P>
<P CLASS="SHS1A-Section-Head-Sub-1-AcrossTOC">
<A NAME="pgfId-73302"></A><A HREF="flip_um.htm#pgfId-1013346" CLASS="Index">Configuration file example	 13</A></P>
</DIV>
<DIV>
<H6 CLASS="SHNPA-Section-Head-New-Page-AcrossTOC">
<A NAME="pgfId-73304"></A><A HREF="flip_um.htm#pgfId-974400" CLASS="Index">Troubleshooting	 14</A></H6>
<P CLASS="SHS1A-Section-Head-Sub-1-AcrossTOC">
<A NAME="pgfId-73306"></A><A HREF="flip_um.htm#pgfId-1052847" CLASS="Index">Configuration Files	 14</A></P>
<P CLASS="SHS1A-Section-Head-Sub-1-AcrossTOC">
<A NAME="pgfId-73308"></A><A HREF="flip_um.htm#pgfId-1015904" CLASS="Index">Global messages	 14</A></P>
<P CLASS="SHS1A-Section-Head-Sub-1-AcrossTOC">
<A NAME="pgfId-73310"></A><A HREF="flip_um.htm#pgfId-1015861" CLASS="Index">CAN messages	 14</A></P>
<P CLASS="SHS1A-Section-Head-Sub-1-AcrossTOC">
<A NAME="pgfId-73312"></A><A HREF="flip_um.htm#pgfId-1015907" CLASS="Index">RS232 messages	 15</A></P>
<P CLASS="SHS1A-Section-Head-Sub-1-AcrossTOC">
<A NAME="pgfId-73314"></A><A HREF="flip_um.htm#pgfId-1041141" CLASS="Index">CAN Interfaces	 15</A></P>
<P CLASS="SHS2A-Section-Head-Sub-2-AcrossTOC">
<A NAME="pgfId-73316"></A><A HREF="flip_um.htm#pgfId-1041159" CLASS="Index">PEAK PCAN 15</A></P>
<P CLASS="SHS2A-Section-Head-Sub-2-AcrossTOC">
<A NAME="pgfId-73318"></A><A HREF="flip_um.htm#pgfId-1041423" CLASS="Index">VECTOR CANpari 16</A></P>
</DIV>
<DIV>
<H1 CLASS="SHA-Section-Head-Across">
<A NAME="pgfId-958150"></A>Overview</H1>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-958222"></A>This ATMEL's ISP software allows to program all our FLASH C51 parts. It runs under Windows 9x / Me, Windows NT / 2000 / XP and Linux as well.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1040793"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-958223"></A>Communicating with the target device may be done through a RS232 link, a CAN or an USB link, depending on the communication media supported by the target device.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-960435"></A>This software is named FLIP, which stands for: FLexible In-system Programmer.</P>
</DIV>
<DIV>
<H1 CLASS="SHA-Section-Head-Across">
<A NAME="pgfId-958226"></A>Main Features</H1>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-958231"></A>Intel MCS-86 Hexadecimal Object, Code 88 file format supported for data file loading and saving</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-987169"></A>Optional address offset for loading</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-958232"></A>Buffer control:</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-958233"></A>data byte modification, address range fill-in, goto a specified address, data byte sequence search</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-958247"></A>Target device control:</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-958250"></A>Blank check, Program, Read, Verify, Erase, Special bytes edition capability</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-958228"></A>Permanently displayed and updated information about the buffer options and the target device status</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-958272"></A>Customizable flow for quick repeating programming</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-958278"></A>Command window allowing control through a command file (Tcl language)</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1012999"></A>Commands recording for automatic reconfiguration and commands replay.</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-958281"></A>Progress bar, tooltips and on-line help</H6>
</DIV>
</DIV>
<DIV>
<H1 CLASS="SHA-Section-Head-Across">
<A NAME="pgfId-957689"></A>Software Installation and Setup</H1>
<DIV>
<H2 CLASS="SHS1A-Section-Head-Sub-1-Across">
<A NAME="pgfId-960437"></A>Windows Installation</H2>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-973537"></A>Copy the Flip_&lt;version&gt;.zip file to an empty temporary directory.</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-973538"></A>Perform the zip file extraction so that it builds a Flip_&lt;version&gt; directory.</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-973547"></A>Open the Flip_&lt;version&gt; directory and run the Setup file.</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-973540"></A>Follow the installation program instructions.</H6>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1040802"></A>For parallel port to CAN interfaces to work, you have to install the proper drivers first.</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="SHS1A-Section-Head-Sub-1-Across">
<A NAME="pgfId-960438"></A>Linux Installation</H2>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-960441"></A>Uncompress and untar the archive file.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-960446"></A>The Linux version of FLIP supports ISP through the RS232 port and RS232 / CAN interfaces (nor USB, neither parallel port CAN interfaces are supported).</P>
</DIV>
</DIV>
<DIV>
<H1 CLASS="SHNPA-Section-Head-New-Page-Across">
<A NAME="pgfId-960436"></A>Getting Started</H1>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-962577"></A>This chapter guides you through a short tour of FLIP to help you getting started with this ISP software.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-913917"></A>Once the FLIP main window appears, you can see three areas from the left to the right: the Operations Flow area, the Buffer Information area and the Device parameters one.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-966964"></A>Just below these three frames stands a command and history window which use will be discussed in <A HREF="flip_um.htm#31182" CLASS="XRef">See The history and command window</A>.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-966963"></A>A message log window, a progress bar area and a communication information report are available at the bottom of the main window.<BR>
</P>
<OL>
<LI CLASS="BN1-Body-Numbered-1">
<A NAME="pgfId-973563"></A>Connect your target hardware to the host platform serial port, CAN port or USB one.</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-966941"></A>Connect your target hardware to a power supply and reset it. We assume that the device to be programmed contains a FLIP compliant bootloader program.</LI>
</OL>
<DIV>
<H6 CLASS="BN1P-Body-Numbered-1-">
<A NAME="pgfId-966945"></A>Select a device from the device list.</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-966946"></A>From the top menu bar, select the Device item. In the Device pull-down menu, click the Select item.The Device Selection dialog box pops up. Select a device from the devices list box and click OK.<BR>
As soon as the device is selected, the Device parameters area is updated to let you see the selected device special bytes. The Buffer information area is updated as well with device dependent information. </LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BN1P-Body-Numbered-1-">
<A NAME="pgfId-973632"></A>Select a communication medium.</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-962588"></A>From the top menu bar, select the Settings item. In the Settings pull-down menu, click the Communication item. In the Communication cascading menu, select a communication medium.<BR>
The medium setup dialog box pops up. Adjust the communication parameters, and click Connect.<BR>
FLIP starts a synchronization sequence with the target device bootloader software. After the synchronization sequence completion, FLIP reads the target device special bytes and updates the main window frame on the right.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BN1P-Body-Numbered-1-">
<A NAME="pgfId-962587"></A>Select a HEX data file.</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-962682"></A>From the top menu bar, select the File item. In the File pull-down menu, click the Load item.<BR>
Select a HEX file from the file browser. FLIP parses the HEX file and fills in the edition buffer.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BN1P-Body-Numbered-1-">
<A NAME="pgfId-962686"></A>Open the buffer edition window.</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-962688"></A>From the top menu bar, select the Buffer item. In the Buffer pull-down menu, click the Edit item.<BR>
The Edit Buffer window pops up. You may now perform many operations onto the buffer contents.<BR>
For details about the possible buffer editing capabilities, see the <A HREF="flip_um.htm#16781" CLASS="XRef">See Editing the buffer and setting options</A>.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BN1P-Body-Numbered-1-">
<A NAME="pgfId-966920"></A>Open the buffer options window.</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-966921"></A>You may open the buffer options window from the FLIP main window, or from the Edit Buffer dialog box.<BR>
From the main window menu bar, select the Buffer item. In the Buffer pull-down menu, click the Options item.<BR>
The Buffer Options dialog box pops up. The main buffer options are: the buffer size, the initial contents, the address programming range and the loading offset. For details about these options, see the <A HREF="flip_um.htm#16781" CLASS="XRef">See Editing the buffer and setting options</A>.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BN1P-Body-Numbered-1-">
<A NAME="pgfId-967008"></A>Program the target device.</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-967010"></A>From the top menu bar, select the Device item. In the Device pull-down menu, click the Program item.<BR>
</LI>
</UL>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-967009"></A>This concludes our short tour of the FLIP demo. For detailed descriptions of the possible operations, please read the following chapters.</P>
</DIV>
</DIV>
<DIV>
<H1 CLASS="SHA-Section-Head-Across">
<A NAME="pgfId-962572"></A>Selecting a device</H1>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-973634"></A>From the top menu bar, select the Device item. In the Device pull-down menu, click the Select item.The Device Selection dialog box pops up. Select a device from the devices list box and click OK.<BR>
As soon as the device is selected, the Device parameters area is updated to let you see the selected device special bytes. The Buffer information area is updated as well with device dependent information.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1013006"></A>The device selection may be done by pressing the F2 function key.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-973636"></A>Each device supports a particular set of communication media.<BR>
You may use FLIP as an HEX file editor only; in that case, you do not have to select a device from the device list.</P>
</DIV>
<DIV>
<H1 CLASS="SHA-Section-Head-Across">
<A NAME="pgfId-973639"></A>Selecting a communication medium</H1>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-973659"></A>From the top menu bar, select the Settings item. In the Settings pull-down menu, click the Communication item. In the Communication cascading menu, select a communication medium. The medium setup dialog box pops up.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1013007"></A>The communication medium selection may be done by pressing the F3 function key.</P>
<DIV>
<H2 CLASS="SHS1A-Section-Head-Sub-1-Across">
<A NAME="pgfId-973656"></A>RS232</H2>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-973642"></A>Adjust the communication parameters, and click Connect.<BR>
FLIP starts a synchronization sequence with the target device bootloader software. After the synchronization sequence completion, FLIP reads the target device special bytes and updates the Device parameters area.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-973671"></A>Important note:</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-973672"></A>The RS232 synchronization sequence will probably pass, even at high baudrates. Nevertheless, you must take care to the baudrate selection: if the target hardware oscillator frequency is too low, the bootloader cannot achieve characters reception/transmission and FLASH programming properly. In such cases, you have to decrease the baudrate.<BR>
FLIP will warn you through a message box if such a situation occurs. The following table shows the valid Osc. freq./Baudrate pairs which allow a successful RS232 transmission.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-973676"></A>&nbsp;</P>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TH8CB-Table-Heading-8pt-Center-Bottom">
<A NAME="pgfId-973876"></A>Freq. / Baudrate</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TH8CB-Table-Heading-8pt-Center-Bottom">
<A NAME="pgfId-973878"></A>2400</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TH8CB-Table-Heading-8pt-Center-Bottom">
<A NAME="pgfId-973880"></A>4800</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TH8CB-Table-Heading-8pt-Center-Bottom">
<A NAME="pgfId-973882"></A>9600</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TH8CB-Table-Heading-8pt-Center-Bottom">
<A NAME="pgfId-973884"></A>19200</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TH8CB-Table-Heading-8pt-Center-Bottom">
<A NAME="pgfId-973886"></A>38400</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TH8CB-Table-Heading-8pt-Center-Bottom">
<A NAME="pgfId-973888"></A>57600</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TH8CB-Table-Heading-8pt-Center-Bottom">
<A NAME="pgfId-973890"></A>115200</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973892"></A>11.0592 MHz</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973894"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974166"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974178"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974190"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974202"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973904"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973906"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973908"></A>12.0000 MHz </P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973910"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974168"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974180"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974192"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974204"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973920"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973922"></A>&nbsp;</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973924"></A>14.7456 MHz</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973926"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974170"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974182"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974194"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974206"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974216"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973938"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973940"></A>16.0000 MHz</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973942"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974172"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974184"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974196"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974208"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973952"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973954"></A>&nbsp;</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973956"></A>22.1184 MHz</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973958"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974174"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974186"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974198"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974210"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974222"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973970"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973972"></A>24.0000 MHz</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973974"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974176"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974188"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974200"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974212"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-974224"></A><EM CLASS="Zap">
3</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TB8CM-Table-Body-8pt-Center-Middle">
<A NAME="pgfId-973986"></A>&nbsp;</P>
</TD>
</TR>
</TABLE>
</DIV>
<DIV>
<H2 CLASS="SHS1A-Section-Head-Sub-1-Across">
<A NAME="pgfId-973655"></A>CAN</H2>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1015714"></A>Select the proper CAN interface from the pulldown CAN menu. FLIP supports several CAN interfaces: three of them must be connected to the PC parallel port, one of them has been developed by ATMEL and must be connected to the PC RS232 port; the last one is an USB to CAN interface.</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1020444"></A>The Controller Area Network Setup dialog box shows up.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1015708"></A>Adjust the communication parameters port and baud rate.</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1015713"></A>Click the Init button; this initializes the CAN hardware interface connected to the PC.</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1015725"></A>Check the node number and the CRIS parameters values; change them if necessary. For the CRIS parameter to be taken into account, you must hit the RETURN key after typing the new CRIS value; this updates the IDs values displayed in the dialog box.</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1015728"></A>Click the Node Connect button. FLIP reads the target device special bytes and updates the Device parameters area.</LI>
</UL>
</DIV>
</DIV>
</DIV>
<DIV>
<H1 CLASS="SHA-Section-Head-Across">
<A NAME="pgfId-1015709"></A>Device special bytes</H1>
<DIV>
<H2 CLASS="SHS1A-Section-Head-Sub-1-Across">
<A NAME="pgfId-1015748"></A>General options</H2>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1015710"></A>The device special bytes are displayed in the main window Device parameters area. Some of them are read-only.<BR>
You may read the special bytes at any time, if allowed by the security level, by clicking the Read button.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-967072"></A>Changing the special bytes values is straight forward: set a new value in the proper entry field and click the Set button.<BR>
FLIP will write the special bytes new values and will read back the special bytes values from the device. This guaranties that the displayed values are the device ones, not only values to be programmed.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-967051"></A>FLIP takes care about the current security level and disables the Read and the Set buttons when necessary.</P>
</DIV>
<DIV>
<H2 CLASS="SHS1A-Section-Head-Sub-1-Across">
<A NAME="pgfId-1015749"></A>CAN options</H2>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1015736"></A>For devices supporting the CAN protocol, FLIP provides a CAN button at the bottom of the Device parameters area.<BR>
Clicking the CAN button makes the CAN Node Configuration dialog visible. It lets you read and modify a CAN node parameters.<BR>
The parameters that may be changed are :</P>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1015753"></A>node number</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1015754"></A>CRIS (CAN Relocatable Identifier Segment)</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1015755"></A>BTC1 / BTC2 / BTC3 (Byte Timing Configuration)</H6>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1015756"></A>To change a value, simply type the new value in the proper entry and click the Set button.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1015757"></A>After any CAN node configuration modification, you must reset the target device in order to force the new configuration to be taken into account.</P>
</DIV>
</DIV>
</DIV>
<DIV>
<H1 CLASS="SHA-Section-Head-Across">
<A NAME="pgfId-962574"></A><A NAME="16781"></A>Editing the buffer and setting options</H1>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-974001"></A>FLIP allows many operations on the buffer. This chapter describes each of them.</P>
<DIV>
<H2 CLASS="SHS1A-Section-Head-Sub-1-Across">
<A NAME="pgfId-967073"></A>The Edit Buffer window</H2>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-974007"></A>From the top menu bar, select the Buffer item. In the Buffer pull-down menu, click the Edit item.<BR>
The entries are not case sensitive. Nor X, neither 0X prefix is necessary when you type addresses or data values.</P>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-967097"></A>File &gt; Load ...</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-967098"></A>Loads a HEX file into the buffer. Use the file browser to select a file.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-967099"></A>File &gt; Save as ...</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-967100"></A>Allows saving the buffer contents to a file.<BR>
The range of addresses which will be saved is recalled in the main window Buffer Information area, with the Range label. You may modify the range values through the Buffer Options dialog box. In the Address Programming Range field, select the User Defined Address Range option and set the Min and Max addresses, then click OK or Apply. The main window Buffer Information area should reflect your changes.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974022"></A>Edit &gt; Modify ...</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974025"></A>Opens a dialog box which lets you modify the buffer contents. Type an address and a data value in hexadecimal format. <BR>
After modification, the buffer window is scrolled and a yellow tag highlights the modified address. You may perform buffer modifications by merely double-clicking a data byte within the buffer window.</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974042"></A>Click the Apply button to perform changes without closing the Modify Buffer dialog box. Click the OK button or hit the Return key to perform changes and close the dialog box.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974043"></A>Edit &gt; Goto ...</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974020"></A>Opens a dialog box which lets you specify an address you want to scroll to.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974049"></A>Edit &gt; Fill ...</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974053"></A>Lets you enter a start address, an end address, and a value you want to be used to fill the defined address range.<BR>
Click the Fill button to fill the address range. Use the Check button when you want to check an address range contents.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974056"></A>Edit &gt; Reset ...</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974054"></A>Use this command to reset the buffer to the default blank value. The default blank value is displayed in the main window Buffer Information area. You can change it by using the Buffer Options window.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974062"></A>Device &gt; Read</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974082"></A>Use this command to read the target device FLASH memory. The Edit Buffer window is updated afterwards.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974071"></A>Device &gt; Program</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974085"></A>Use this command to program the target device FLASH memory.</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974094"></A>The device programming address range is displayed in the main window Buffer Information area and is labeled Range. You can change it by using the Buffer Options window.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974077"></A>Device &gt; Verify</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974107"></A>This command lets you compare the target device memory contents with the buffer one. The comparison is done between (and including) boundary addresses. The address range is displayed in the main window Buffer Information. You can change it by using the Buffer Options window.</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974069"></A>FLIP displays the first fail address, if any.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974047"></A>Options ...</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974113"></A>This command opens the Buffer Options dialog box.</LI>
</UL>
</DIV>
</DIV>
<DIV>
<H2 CLASS="SHS1A-Section-Head-Sub-1-Across">
<A NAME="pgfId-973991"></A>The Buffer options window</H2>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-974116"></A>From the top menu bar, select the Buffer item. In the Buffer pull-down menu, click the Options item.<BR>
The entries are not case sensitive. Nor X, neither 0X prefix is necessary when you type addresses or data values.</P>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974114"></A>Buffer Size</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974122"></A>After a device selection, this option is set to device dependent state by default; this means that the buffer size is set to the target device memory one (in Kbytes).<BR>
You may override this option setup and define a different buffer size value.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974126"></A>Initial Buffer Contents</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974129"></A>After a device selection, this option is set to device dependent state by default; this means that the buffer default reset value is set to the target device memory blank value.<BR>
You may override this option setup and define a different buffer reset value.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974127"></A>Reset Buffer Before Loading</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974140"></A>Set this option to yes only if you want the buffer to be reset to the blank value before reading the HEX file.<BR>
The default No value is useful when you intend to load several HEX files into the buffer.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974121"></A>Address Programming Range</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974250"></A>This option lets you define the address range which will be used to program the target device. It can be set to the following values:</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974251"></A>Address Range From Last Buffer Load</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974256"></A>This is the default setup. The address programming range is set to the address range of the last HEX file loaded into the buffer.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974252"></A>Whole Buffer</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974259"></A>The whole buffer address range will be used to program the target device.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974253"></A>User Defined Address Range</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974260"></A>Select this option if you want to define a particular range of address to program the target device.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974254"></A>Loading Address Offset</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974269"></A>This field lets you enter an offset value to be added to the HEX file addresses before loading the buffer.</LI>
</UL>
</DIV>
</DIV>
<DIV>
<H2 CLASS="SHS1A-Section-Head-Sub-1-Across">
<A NAME="pgfId-1013008"></A>The Buffer Checksum</H2>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1013009"></A>The buffer checksum value is displayed in the main window Buffer Information area.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1013010"></A>The checksum is calculated on the address range displayed in the Buffer Information area; the address boundaries are included in the address range. As described in the above paragraph, the user has control over the address programming range. </P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1013016"></A>The checksum value is updated each time the buffer is modified within the address programming range by operations like: reset, modify, fill, HEX file loading and device reading.</P>
</DIV>
</DIV>
<DIV>
<H1 CLASS="SHA-Section-Head-Across">
<A NAME="pgfId-973992"></A>Executing operations on the target device</H1>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-974278"></A>From the top menu bar, select the Device item. In the Device pull-down menu, select an operation.</P>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974292"></A>Device &gt; Select ...</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974293"></A>Use this command to select a device from a list.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974294"></A>Device &gt; Erase ...</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974295"></A>This command pops up a dialog box for you to enter the erasing options. Some devices do not allow erasing per block; FLIP takes care about this by making the corresponding selections impossible.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974307"></A>Device &gt; Blank Check ...</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974308"></A>This command lets you compare the target device contents to the blank value. The current blank value is displayed in the Buffer Information area of the main window. The verification is done between (and including) two boundary addresses which you can adjust through the Blank Check dialog box Start Address and End Address fields. Click the Check button to perform the operation. The pass/fail status is displayed in the Blank Check dialog box. If an error occurs the fail address is reported in the Blank Check dialog box.<BR>
Use the dialog box Reset button to clear any previous check status message.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974311"></A>Device &gt; Read ...</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974313"></A>This command lets you read the target device contents between two boundary addresses. You can specify these boundaries through the dialog box Start address and End address fields.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974316"></A>Device &gt; Program</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974318"></A>This command launches the target device programmation. The device programming address range is displayed in the main window Buffer Information area and is labeled Range. You can change it by using the Buffer Options window.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974334"></A>Device &gt; Verify</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-974339"></A>This command lets you compare the target device contents to the buffer one. The verification is done on the address range displayed in the main window Buffer Information area and is labeled Range. You can change it by using the Buffer Options window.</LI>
</UL>
</DIV>
</DIV>
<DIV>
<H1 CLASS="SHA-Section-Head-Across">
<A NAME="pgfId-974298"></A>Operations flow</H1>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-974345"></A>The operations flow is displayed on the left part of the FLIP main window. It lets you select a number of operations to be performed sequentially. You launch the flow sequence by clicking the Run button.<BR>
When an operation completes, the corresponding check box color changes from white to green (for pass status) or red (for fail status).</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-974349"></A>If one of the operations fails, the operations flow stops.<BR>
Some operations in the flow require that you perform a setup, first :</P>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974355"></A>Erase - Setup the erase options through Device &gt; Erase ...</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974358"></A>Blank Check - Setup the Blank Check options through Device &gt; Blank Check ...</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974356"></A>Program - Setup the address programming range through Buffer &gt; Options ...</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-974367"></A>Verify - Setup the address verifying range through Buffer &gt; Options ...</H6>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-974377"></A><BR>
Use the Clear button to clear all checkboxes in the flow.</P>
</DIV>
</DIV>
<DIV>
<H1 CLASS="SHA-Section-Head-Across">
<A NAME="pgfId-966952"></A><A NAME="31182"></A>The history and command window</H1>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1013017"></A>Starting with the FLIP version 1.2.0, the history and command window can be displayed through the Settings &gt; Command Window pulldown menu.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-974392"></A>This window keeps the history of all actions performed on the target device or on HEX files, but it can do much more than this! Type pwd at the prompt and you will get the current FLIP working directory. Type expr 2 + 5 and you will get the result of this addition. <BR>
FLIP has been written in Tcl and C; everything you type in the command window is interpreted by a Tcl interpreter. Type anything stupid in the command window (no example is provided here, you should be able to find your own) and you will get an invalid command name &quot;stupid&quot; message.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-974399"></A>The command window gives you access to the Tcl commands and you can rely on the Tcl power to write flexible scripts which you can then execute in the command window. Since some of the FLIP functions are made available to the Tcl command window, you can call these functions in you Tcl script. An example of use of this capability follows.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-974406"></A>Imagine that the Erase function which performs the target device erase operation is called erase_f. This function returns 1 if erase passes and 0 if it fails. You want to perform the erase operation once, check if it passes or fails and execute it again if it has failed. Your Tcl script would be something like :<BR>
</P>
<P CLASS="C-Code">
<A NAME="pgfId-974408"></A>if { [ erase_f ] != 1 } {</P>
<P CLASS="C-Code">
<A NAME="pgfId-974409"></A>	erase_f</P>
<P CLASS="C-Code">
<A NAME="pgfId-974410"></A>}</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-974407"></A>Do not type this example in the command window because it cannot work. At the time this document is written, this scripting capability is not fully implemented and cannot be used to write production scripts, but it is used by the FLIP developpers for tests and software validation purposes. Future versions of FLIP will make this capability available to the end user and all the usable functions will be documented.</P>
</DIV>
<DIV>
<H1 CLASS="SHA-Section-Head-Across">
<A NAME="pgfId-1013021"></A>Recording and replaying commands</H1>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1013023"></A>FLIP lets you build, load and execute a configuration file so that you can quickly configure a large number of devices or repeat a given sequence onto the same device.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1013039"></A>You may build a configuration file by launching FLIP, executing commands and saving these commands into a configuration file. You may also write this configuration file by hand.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1052918"></A>Because of the large number of supported CAN interfaces, FLIP cannot generate valid configuration files for CAN interfaces. If you intend to automate ISP operations through a CAN dongle, you will have to write the configuration file by hand. In order to help you, some CAN configuration files are provided in the CAN subdirectory of the FLIP software package. It is easy to write your own configuration file from these examples.</P>
<DIV>
<H2 CLASS="SHS1A-Section-Head-Sub-1-Across">
<A NAME="pgfId-1013027"></A>Building the configuration file automatically</H2>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1013047"></A>Launch FLIP and perform the following operations :</P>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013053"></A>Select a device</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013054"></A>Set the communication parameters and connect to the target device</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013055"></A>Load a HEX file from disk</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013056"></A>Program the device</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013057"></A>Build the configuration file by executing the File &gt; Save Configuration As... pulldown menu command.</H6>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1013081"></A>Even if you do not explicitely save a configuration file, it is built and saved anyway when you exit FLIP. In that case, it will be named flip.cfg by default and will be written in the directory in which the flip.exe file is located if you have write privileges to this directory.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1013063"></A>Open the configuration file with a text editor to look at what FLIP has produced; you should see something like :</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013066"></A>selectDevice T89C51RC2</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013067"></A>set port COM1</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013068"></A>set baud 57600</P>
<P CLASS="C-Code">
<A NAME="pgfId-1020448"></A>initProtocol RS232Standard</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013069"></A>connectRS232 Standard</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013070"></A>parseHexFile &quot;D:/Labo/dev/app/Flip_dev/bin/2kisp.hex&quot;</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013071"></A>setupProgramDevice</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013072"></A>&nbsp;</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="SHS1A-Section-Head-Sub-1-Across">
<A NAME="pgfId-1013064"></A>Loading and running the configuration file</H2>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1013079"></A>Use the File &gt; Load Configuration... pulldown menu command to load and execute a configuration file.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1013080"></A>You can then rerun the configuration file without loading it by simply pressing the F5 function key.</P>
</DIV>
<DIV>
<H2 CLASS="SHS1A-Section-Head-Sub-1-Across">
<A NAME="pgfId-1013090"></A>Building a configuration file using a text editor</H2>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1013092"></A>The configuration file is mainly made of calls to Tcl procedures defined in FLIP. Tcl being case sensitive, you must take care to the syntax.</P>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013096"></A>Selecting a device</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013110"></A>Syntax : selectDevice &lt;device_name&gt;</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013098"></A>Example : selectDevice T89C51RC2</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013111"></A>Selecting a communication port</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013113"></A>Syntax : set port &lt;port_name&gt;</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013114"></A>Example : set port COM1</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013119"></A>Selecting a baudrate</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013121"></A>Syntax : set baud &lt;baudrate&gt;</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013126"></A>Example : set baud 57600</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013174"></A>Connecting to the device</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1020410"></A>The connection is made of two steps: you first specify a protocol and then connect to the device.</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013175"></A>Syntax : </LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1020414"></A>initProtocol &lt;medium-protocol_name&gt;</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1020422"></A>connectRS232 &lt;protocol_name&gt;</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013176"></A>Example : </LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1020424"></A>initProtocol RS232Standard</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1020425"></A>connectRS232 Standard</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013131"></A>Loading a HEX file</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013134"></A>Syntax : parseHexFile &quot;&lt;hex_file_pathname&gt;&quot;</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013135"></A>Example 1 : parseHexFile &quot;D:/Labo/dev/app/Flip Dev/bin/2kisp.hex&quot;</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013140"></A>The double quotes may be omitted if the file pathname does not contain any space.</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013153"></A>Example 2 : parseHexFile D:/Labo/dev/app/FlipDev/bin/2kisp.hex</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013120"></A>Erasing the device</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013187"></A>Some devices only support a full chip erase operation; some others support full chip and per block erasing operations.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013212"></A>Full chip erase :</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013186"></A>Syntax : setupFullEraseDevice</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013213"></A>Block erase :</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013214"></A>Syntax : setupEraseBlock&lt;i&gt;</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013215"></A>Example : setupEraseBlock0</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013216"></A>If you intend to erase several blocks, simply write several block erase lines with different block numbers.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013091"></A>Blank checking the device</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013219"></A>Checking that a device is blank requires that you enter three lines :</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013220"></A>Syntax : </LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013229"></A>setupBlankCheckDevice</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013228"></A>set blankCheckAddr(start) &lt;start_addr&gt;</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013230"></A>set blankCheckAddr(end) &lt;end_addr&gt;</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013237"></A>Example :</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013243"></A>setupBlankCheckDevice</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013244"></A>set blankCheckAddr(start) 0000</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013245"></A>set blankCheckAddr(end) 7FFF</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013241"></A>Programming the device</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013250"></A>Syntax : setupProgramDevice</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013166"></A>Verifying the device</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013257"></A>Syntax : setupVerifyDevice</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013167"></A>Setting the Software Boot Vector value</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013272"></A>Syntax : setupSBV &lt;value&gt;</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013279"></A>Example : setupSBV FC</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013304"></A>Setting the Boot Status Byte value</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013305"></A>Syntax : setupBSB &lt;value&gt;</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013297"></A>Example : setupBSB FE</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013298"></A>Setting the device security level</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013299"></A>Syntax : setupSecurityLevel &lt;security_level&gt;</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013300"></A>Example : setupSecurityLevel 1</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013301"></A>Programming the Oscillator fuse</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013309"></A>Syntax : setupOscFuse &lt;value&gt;</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013314"></A>Example : setupOscFuse 1</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013319"></A>Programming the BLJB fuse</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013320"></A>Syntax : setupBljbFuse &lt;value&gt;</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013325"></A>Example : setupBljbFuse 0</LI>
</UL>
<P CLASS="BI-Body-Indent">
<A NAME="pgfId-1053099"></A>The BLJB bit is active low.</P>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1013330"></A>Programming the X2 fuse</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013331"></A>Syntax : setupX2Fuse &lt;value&gt;</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1013340"></A>Example : setupX2Fuse 1</LI>
</UL>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1013280"></A>The above commands do not actually perform the described operations, they only setup them. In order to execute the described operations, you must select the File &gt; Execute Configuration File command or press the F5 key.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1013306"></A>You may comment out a line of the configuration file by inserting a &quot;#&quot; character at the beginning of the line.</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="SHS1A-Section-Head-Sub-1-Across">
<A NAME="pgfId-1052938"></A>Serializing Parts</H2>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1052942"></A>You may want to register a serial number (64 bits max.) in your parts during the ISP process. FLIP provides a mean to do this through the configuration file, but it cannot produce the proper command automatically; you will have to add the serialization command to your configuration file by hand.</P>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1052956"></A>Syntax : setupSerialize &lt;memory&gt; &lt;sn_init&gt; &lt;sn_width&gt; &lt;sn_step&gt; &lt;sn_lsb_addr&gt;</LI>
</UL>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1052964"></A>Parameters:</P>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1052992"></A>&lt;memory&gt; = FLASH or EEPROM</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1052996"></A>&lt;sn_init&gt;		 = Serial Number initial value in hexadecimal, without any leading X, 0x or H prefix. sn_init must be composed of an even number of characters.</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1053001"></A>&lt;sn_width&gt; = number of bytes necessary to handle the serial number (8 max.).</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1053002"></A>&lt;sn_step&gt; = a positive or negative number to increment or decrement the serial number.</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1053003"></A>&lt;sn_lsb_addr&gt; = the less significant byte of the serial number in memory</H6>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1053008"></A>The current serial number will be displayed in the Buffer Information frame of the main window. In case of wrong argument given to the setupSerialize procedure, an error message is displayed in the Buffer Information frame.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1053043"></A>The EEPROM selection may not be possible; this depends on the microcontroller type. An error message will be displayed </P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1053020"></A>Valid procedure calls:</P>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1053021"></A>setupSerialize FLASH 00 8 1 7</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1053039"></A>setupSerialize EEPROM DEADBEEF00000000 8 10 0x7FFF</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1053044"></A>setupSerialize FLASH 090302FFFFFF 6 -1 255</H6>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1053045"></A>Invalid procedure calls:</P>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1053051"></A>setupSerialize FLAS 00 8 1 7 (the memory name is not correct)</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1053055"></A>setupSerialize FLASH F00 8 1 7 (odd number of chars for the initial value; should be 0F00)</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1053056"></A>setupSerialize FLASH 00 9 1 7 (the number of bytes reserved to store the serial number is too large)</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1053057"></A>setupSerialize FLASH 00 8 0 7 (the step value is zero)</H6>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1053058"></A>setupSerialize FLASH 00 8 1 6 (you cannot store a 8-byte serial number if the address of its less significant byte is 6)</H6>
</DIV>
</DIV>
<DIV>
<H2 CLASS="SHS1A-Section-Head-Sub-1-Across">
<A NAME="pgfId-1013346"></A>Configuration file example</H2>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1013347"></A>Putting all this together, we can build a full configuration file :</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1013461"></A>&nbsp;</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013391"></A># --------------- Configuration file example -------------------</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013463"></A>#</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013462"></A># Device selection and communication setup</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013422"></A>selectDevice T89C51RC2</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013423"></A>set port COM1</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013424"></A>set baud 57600</P>
<P CLASS="C-Code">
<A NAME="pgfId-1020426"></A>initProtocol RS232Standard</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013425"></A>connectRS232 Standard</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013464"></A>#</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013426"></A>parseHexFile &quot;D:/Labo/dev/app/Flip_dev/bin/2kisp.hex&quot;</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013465"></A># Erase 3 blocks</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013427"></A>setupEraseBlock0</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013428"></A>setupEraseBlock1</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013429"></A>setupEraseBlock2</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013466"></A># Blank checking requires 3 lines</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013430"></A>setupBlankCheckDevice</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013431"></A>set blankCheckAddr(start) 0010</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013432"></A>set blankCheckAddr(end) 07FF</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013467"></A># Program the device with the above loaded HEX file</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013433"></A>setupProgramDevice</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013468"></A># Verify proper device programming</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013434"></A>setupVerifyDevice</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013469"></A># Program the special bytes</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013435"></A>setupSBV FB</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013436"></A>setupBSB 81</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013437"></A>setupOscFuse 1</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013438"></A>setupBljbFuse 0</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013439"></A>setupX2Fuse 1</P>
<P CLASS="C-Code">
<A NAME="pgfId-1013440"></A>setupSecurityLevel 1</P>
<P CLASS="C-Code">
<A NAME="pgfId-1053066"></A>setupSerialize FLASH 00 8 1 0x7FFF</P>
</DIV>
</DIV>
<DIV>
<H1 CLASS="SHNPA-Section-Head-New-Page-Across">
<A NAME="pgfId-974400"></A>Troubleshooting</H1>
<DIV>
<H2 CLASS="SHS1A-Section-Head-Sub-1-Across">
<A NAME="pgfId-1052847"></A>Configuration Files</H2>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1052848"></A>The automatic generation of a configuration file done by FLIP is not fully functional for CAN interfaces. Therefore, you must create CAN configuration files by hand.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1052849"></A>Configuration files examples are provided in the /can directory of your FLIP installation directory.</P>
</DIV>
<DIV>
<H2 CLASS="SHS1A-Section-Head-Sub-1-Across">
<A NAME="pgfId-1015904"></A>Global messages</H2>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-962605"></A>Time Out Error</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-962606"></A>Check the communication medium connections and the target hardware power supply.<BR>
If everything is allright, reset the target hardware and select a smaller baud rate from the FLIP communication medium dialog box. For maximum performance purpose, FLIP and its software companion (the bootloader) do not perform any data flow control (no XON/XOFF). Therefore, at high baud rates, it may happen that the bootloader has no time enough to perform data management and does not answer properly to the FLIP commands or the answer comes too late.</LI>
</UL>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-962600"></A>&nbsp;</P>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1015852"></A>Software Security Bit set. Cannot access device data.</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1015860"></A>The major part of the target device is protected against writing operations when the device is set to the security level 1 and protected against reading operations when the device is set to the security level 2. The above message means that the operation performed by FLIP is not legal.</LI>
</UL>
</DIV>
</DIV>
<DIV>
<H2 CLASS="SHS1A-Section-Head-Sub-1-Across">
<A NAME="pgfId-1015861"></A>CAN messages</H2>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1015833"></A>CAN interface error</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1015838"></A>The PC parallel port to CAN hardware interface did not execute the FLIP command properly.</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1015848"></A>&nbsp;</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1015843"></A>Unexpected CAN response data length</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1015849"></A>The length of the CAN message sent by the bootloader is unexpected.</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1015842"></A>&nbsp;</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-973571"></A>The bootloader did not understand the FLIP command</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1015826"></A>The CAN protocol stack specification mentions that while sending programming frames to the device, the bootloader may answer with a data byte of 0x00 if it got all data from FLIP, 0x02 if it expects more data from FLIP and 0x01 if the bootloader failed to execute the write command.</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1015862"></A>&nbsp;</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1015865"></A>Got an error message ID from the bootloader but the CAN message data value is not correct.</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1015873"></A>The bootloader has detected an error condition and signals it by an error message which is itself corrupted.</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1015874"></A>&nbsp;</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1015877"></A>Got an error message ID from the bootloader but the CAN message data length is not correct.</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1015885"></A>The bootloader has detected an error condition and signals it by an error message which length is not correct.</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1015892"></A>&nbsp;</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1015883"></A>The CAN message ID is not correct.</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1015893"></A>The bootloader answer contains an incorrect identifier.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1015895"></A>Invalid bootloader answer on blank check</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1015900"></A>During the device blank check operation, the bootloader has sent an incorrect answer to FLIP.</LI>
</UL>
</DIV>
</DIV>
<DIV>
<H2 CLASS="SHS1A-Section-Head-Sub-1-Across">
<A NAME="pgfId-1015907"></A>RS232 messages</H2>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1015909"></A>The board reply is not correct</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1015914"></A>Probably a framing error detected by the microcontroller UART.</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1015929"></A>&nbsp;</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1015915"></A>The RS232 port could not be opened</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1015921"></A>The selected serial port does not exist or has not been closed properly. Quit FLIP and start it again.</LI>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1015933"></A>&nbsp;</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="BL-Bullet-List">
<A NAME="pgfId-1015934"></A>Check sum error</H6>
<UL>
<LI CLASS="BLI-Bullet-List-Indent">
<A NAME="pgfId-1015939"></A>The bootloader has received from FLIP a frame which checksum is not correct.</LI>
</UL>
</DIV>
</DIV>
<DIV>
<H2 CLASS="SHS1A-Section-Head-Sub-1-Across">
<A NAME="pgfId-1041141"></A>CAN Interfaces</H2>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1040632"></A>Sometimes the CAN dongle fails to init. This is due to the fact that FLIP calls functions from a DLL released by the manufacturer of the dongle. This DLL contains an Application Programming Interface (API) for third party applications (like FLIP) to control the CAN dongle properly. Most of the time, this DLL is not copied to your file system during a regular CAN dongle software installation; the API DLL requires a specific installation procedure described in the CAN dongle documentation.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041158"></A>The following paragraphs give specific information about some CAN dongles supported by FLIP.</P>
<DIV>
<H3 CLASS="SHS2A-Section-Head-Sub-2-Across">
<A NAME="pgfId-1041159"></A>PEAK PCAN</H3>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041166"></A>The PCAN dongle from PEAK has no API included in it's software package. PEAK provides this API separately. With the PEAK's agreement, we provide you with the API installation package named Pcandrv. It is located in the /can directory of the FLIP installation directory. A typical location is: C:&#92;Program Files&#92;ATMEL&#92;FLIP 1.8.0&#92;can.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041175"></A>Launch the Pcandrv application and once the API and the driver of the dongle are installed, launch FLIP.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041388"></A>Important information is given by PEAK at http://www.peak-system.com. In the Download &gt; Documentation section, read &quot;Tips PCAN-Dongle and Win2000/XP&quot;.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041392"></A>FLIP considers the LPT1 port address as being 0x378, IRQ number 7.</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041394"></A>The interface between FLIP and the PEAK PCAN dongle is the CanApi2.dll file under WINNT&#92;system32.</P>
</DIV>
<DIV>
<H3 CLASS="SHS2A-Section-Head-Sub-2-Across">
<A NAME="pgfId-1041423"></A>VECTOR CANpari</H3>
<DIV>
<H6 CLASS="SHS3-Section-Head-Sub-3">
<A NAME="pgfId-1041427"></A>Windows 98</H6>
<OL>
<LI CLASS="BN1-Body-Numbered-1">
<A NAME="pgfId-1041430"></A>Install the Vector CAN Programming Library. This will copy the vcand32.dll file on your file system.</LI>
</OL>
<DIV>
<H6 CLASS="BN1P-Body-Numbered-1-">
<A NAME="pgfId-1041433"></A>Add the vcand32.dll file pathname to your PATH env. variable by modifying your autoexec.bat file.</H6>
</DIV>
<DIV>
<H6 CLASS="BN1P-Body-Numbered-1-">
<A NAME="pgfId-1041436"></A>Install the CANpari hardware driver for Windows 98.</H6>
</DIV>
</DIV>
<DIV>
<H6 CLASS="SHS3-Section-Head-Sub-3">
<A NAME="pgfId-1041440"></A>Windows 2000</H6>
<OL>
<LI CLASS="BN1-Body-Numbered-1">
<A NAME="pgfId-1041443"></A>Install the Vector CAN Programming Library. This will copy the vcand32.dll file on your file system.</LI>
</OL>
<DIV>
<H6 CLASS="BN1P-Body-Numbered-1-">
<A NAME="pgfId-1041446"></A>Add the vcand32.dll file pathname to your PATH env. variable.</H6>
</DIV>
<DIV>
<H6 CLASS="BN1P-Body-Numbered-1-">
<A NAME="pgfId-1041448"></A>Install the CANpari hardware driver for Windows 2000.</H6>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041369"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041370"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041371"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041372"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041373"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041374"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041375"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041376"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041377"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041378"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041379"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041558"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041559"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041560"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041561"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041562"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041563"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041564"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041565"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041566"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041567"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041568"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041569"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041570"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041571"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041572"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041573"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041574"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041575"></A>&nbsp;</P>
<P CLASS="BT-Body-Text">
<A NAME="pgfId-1041576"></A>&nbsp;</P>
</DIV>
</DIV>
</DIV>
</DIV>
</DIV>
</BODY>
</HTML>
